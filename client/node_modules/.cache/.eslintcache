[{"/Users/uayevan/Desktop/ChessApp/client/src/index.js":"1","/Users/uayevan/Desktop/ChessApp/client/src/App.js":"2","/Users/uayevan/Desktop/ChessApp/client/src/reportWebVitals.js":"3","/Users/uayevan/Desktop/ChessApp/client/src/components/Homepage.js":"4","/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js":"5","/Users/uayevan/Desktop/ChessApp/client/src/components/ChessBoard.js":"6","/Users/uayevan/Desktop/ChessApp/client/src/components/Gamepage.js":"7","/Users/uayevan/Desktop/ChessApp/client/src/components/Navbar.js":"8"},{"size":500,"mtime":1640580318666,"results":"9","hashOfConfig":"10"},{"size":520,"mtime":1642245111139,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1640580318667,"results":"12","hashOfConfig":"10"},{"size":2912,"mtime":1642566060588,"results":"13","hashOfConfig":"10"},{"size":14424,"mtime":1650487336788,"results":"14","hashOfConfig":"10"},{"size":635,"mtime":1650469943596,"results":"15","hashOfConfig":"10"},{"size":1010,"mtime":1650470036458,"results":"16","hashOfConfig":"10"},{"size":744,"mtime":1642587046663,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nt8d6b",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},"/Users/uayevan/Desktop/ChessApp/client/src/index.js",[],["43","44"],"/Users/uayevan/Desktop/ChessApp/client/src/App.js",["45"],"import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Homepage from './components/Homepage.js'\nimport Gamepage from './components/Gamepage.js'\nimport Navbar from './components/Navbar.js'\n\nfunction App() {\n  return (\n    <Router>\n      <body>\n      <Navbar/>\n      <Switch>\n          {/* HomePage */}\n          <Route exact path=\"/\" component={Homepage}/>\n          <Route path='/play' component={Gamepage}/>\n        </Switch>\n      </body>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/uayevan/Desktop/ChessApp/client/src/reportWebVitals.js",[],"/Users/uayevan/Desktop/ChessApp/client/src/components/Homepage.js",["46","47","48","49","50","51","52","53","54"],"import React from 'react'\nimport Board from './Board.js'\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Homepage() {\n    const [name, setName] = useState('')\n    const [elo, setELO] = useState('')\n    const [timer, setTimer] = useState('600')\n    const [increment, setIncrement] = useState('0')\n\n    const changeName = (event) => {\n        setName(event.target.value)\n    } \n\n    const changeELO = (event) => {\n        setELO(event.target.value)\n    }\n\n    const setTimeControl = (event) => {\n        //convert time to seconds!\n        const eventSplit = event.split(\"|\");\n        console.log(eventSplit);\n        var time = eventSplit[0];\n        var inc = eventSplit[1];\n        setTimer(parseInt(time) * 60);\n        setIncrement(parseInt(inc));\n    }\n\n    \n\n    return(\n        <body style={{backgroundColor: 'grey', height: '100vh', width: '100vw', top: '8vh', position: 'absolute'}}>\n            <div style={{fontSize: '144px', textAlign: 'center'}}>CHESS GAME</div>\n            <div>\n                <div style={{textAlign: 'center'}}>\n                    <div>Enter Your Name:</div>\n                    <input type=\"text\" onChange={changeName}></input>\n                    <div>Enter Your ELO</div>\n                    <input type=\"text\" onChange={changeELO}></input>\n                    <br/>\n                    <select name='Time Control' onChange={e=>setTimeControl(e.target.value)}>\n                        <option value=\"10|0\">10 min</option>\n                        <option value=\"5|0\">5 min</option>\n                        <option value=\"3|0\">3 min</option>\n                        <option value=\"1|0\">1 min</option>\n                        <option value=\"15|10\">15 | 10</option>\n                        <option value=\"3|2\">3 | 2</option>\n                        <option value=\"1|1\">1 | 1</option>\n                        <option value=\"60|0\">60 min</option>\n                        <option value=\"30|0\">30 min</option>\n\n                    </select>\n                    <br/>\n                    <br/>\n                    <Link to={{\n                        pathname: '/play',\n                        state: [{name: name, elo: elo, player: 'white', timer: timer, increment: increment}]\n                    }}>\n                        <input type=\"button\" value=\"Play as White!\"/>\n                    </Link>\n                    &nbsp;\n                    <Link to={{\n                        pathname: '/play',\n                        state: [{name: name, elo: elo, player: 'black', timer: timer, increment: increment}]\n                    }}>\n                        <input type=\"button\" value=\"Play as Black!\"/>\n                    </Link>\n                </div>\n            </div>\n        </body>\n    );\n}\n\nexport default Homepage;\n",["55","56"],"/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js",["57","58","59","60","61","62","63","64","65","66","67"],"import React from 'react';\nimport $ from 'jquery'\nimport ChessBoard from './ChessBoard.js'\nimport Chess from 'chess.js'\nimport { useState, useEffect, useContext, memo } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nvar engine = new Worker('stockfish.js');\nvar evaler = new Worker('stockfish.js');\nvar engineStatus = {}\n\nfunction Board(props) {\n    const [selected, setSelected] = useState('x')\n    const [position, setPosition] = useState('start')\n    const [chess, setChess] = useState(new Chess())\n    const [squareStyles, setSquareStyles] = useState({})\n    const [moves, setMoves] = useState([])\n    const [positions, setPositions] = useState(['start'])\n    const [positionIndex, setPositionIndex] = useState(0)\n    const [moveable, setMoveable] = useState('false')\n    const [whiteTimer, setWhiteTimer] = useState(props.timer)\n    const [blackTimer, setBlackTimer] = useState(props.timer)\n    const [gameRunning, setGameRunning] = useState('running')\n    const [gameEndReason, setGameEndReason] = useState('')\n\n    const bot = props.color.charAt(0);\n\n    const changePosition = (index) => {\n        if (index >= 0 && index <= positions.length - 1) {\n            setPosition(positions[index]);\n            setPositionIndex(index);\n            if (positions[index] === positions[positions.length - 1])\n                setMoveable('true')\n            else\n                setMoveable('false')\n        }\n    }\n\n    const convertToTuples = (array) => {\n        //[a, b, c, d, e] => [[a, b], [c, d], [e]]\n        var newArray = [];\n        for (var i = 0; i < array.length; i = i + 2) {\n            if (i >= array.length)\n                break;\n            else if (i + 1 < array.length) {\n                newArray.push([array[i], array[i + 1]])\n            }\n            else {\n                newArray.push([array[i]])\n            }\n        }\n        return newArray;\n    }\n    const move = (theMove) => {\n        if (moveable && gameRunning === \"running\" && theMove.piece.charAt(0) === chess.turn()) {\n            console.log(theMove)\n            chess.move({ from: theMove.sourceSquare, to: theMove.targetSquare, promotion: 'q' })\n            setMoves(convertToTuples(chess.history()))\n            var newArray = positions\n            newArray.push(chess.fen())\n            setPositions(newArray)\n            setPositionIndex(positionIndex + 1);\n            setPosition(chess.fen())\n            if (chess.turn() === \"b\") {\n                setTimeout(() => setWhiteTimer(whiteTimer + parseInt(props.increment)), 1000)\n            }\n            else {\n            }\n        }\n    }\n\n    const movePiece = (square) => {\n        if (moveable && gameRunning === \"running\") {\n            if (chess.get(square) && chess.get(square).color === chess.turn()) {\n                setSelected(square)\n                let highlightedSquares = {};\n                highlightedSquares[square] =\n                {\n                    backgroundColor: \"#0000ff\"\n                }\n                let moves = chess.moves({\n                    square: square,\n                    verbose: true\n                });\n                if (moves.length === 0) {\n                    setSelected('x');\n                    setSquareStyles({})\n                    return;\n                }\n\n                let squaresToHighlight = [];\n                for (var i = 0; i < moves.length; i++) {\n                    squaresToHighlight.push(moves[i].to);\n                }\n                for (var i = 0; i < squaresToHighlight.length; i++) {\n                    highlightedSquares[squaresToHighlight[i]] =\n                    {\n                        background:\n                            \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n                        borderRadius: \"50%\"\n                    }\n                }\n                setSquareStyles(highlightedSquares)\n            }\n            else if (selected !== 'x') {\n                setSelected('x');\n                setSquareStyles({});\n                chess.move({ from: selected, to: square, promotion: 'q' });\n                setMoves(convertToTuples(chess.history()));\n                var newArray = positions;\n                newArray.push(chess.fen());\n                setPositions(newArray);\n                changePosition(newArray.length - 1);\n                if (chess.turn() === \"b\") {\n                    setTimeout(() => setWhiteTimer(whiteTimer + parseInt(props.increment)), 1000)\n                }\n                else {\n                    setTimeout(() => setBlackTimer(blackTimer + parseInt(props.increment)), 1000)\n                }\n            }\n        }\n    }\n\n    const formatTime = (stopwatch) => {\n        var time = new Date(stopwatch * 1000).toISOString().substr(14, 5);\n        return time;\n    }\n\n    useEffect(() => {\n        if (whiteTimer > 0 && blackTimer > 0 && chess.in_checkmate() === false &&\n            chess.in_threefold_repetition() === false && chess.in_stalemate() === false) {\n            if (chess.turn() === \"w\") {\n                setTimeout(() => setWhiteTimer(whiteTimer - 1), 1000)\n            }\n            else {\n                setTimeout(() => setBlackTimer(blackTimer - 1), 1000)\n            }\n        }\n        else {\n            if (chess.in_checkmate() === true) {\n                if (chess.turn() === 'w')\n                    setGameRunning('Black')\n                else\n                    setGameRunning('White')\n                setGameEndReason('checkmate')\n            }\n            else if (chess.in_stalemate() === true) {\n                if (chess.turn() === 'w')\n                    setGameRunning('Black')\n                else\n                    setGameRunning('White')\n                setGameEndReason('stalemate')\n            }\n            else if (chess.in_threefold_repetition() === true) {\n                if (chess.turn() === 'w')\n                    setGameRunning('Black')\n                else\n                    setGameRunning('White')\n                setGameEndReason('threefold repetition')\n\n            }\n            else if (whiteTimer <= 0) {\n                setGameRunning('Black')\n                setGameEndReason('timeout')\n            }\n            else if (blackTimer <= 0) {\n                setGameRunning('White')\n                setGameEndReason('timeout')\n            }\n        }\n    }, [whiteTimer, blackTimer, chess])\n\n    function uciCmd(cmd, which) {\n        // console.log('UCI: ' + cmd);\n\n        (which || engine).postMessage(cmd);\n    }\n    uciCmd(\"uci\");\n\n    function get_moves() {\n        let moves = \"\";\n        let history = chess.history({ verbose: true });\n\n        for (let i = 0; i < history.length; ++i) {\n            let move = history[i];\n            moves +=\n                \" \" + move.from + move.to + (move.promotion ? move.promotion : \"\");\n        }\n\n        return moves;\n    }\n\n    const prepareMove = () => {\n        if (gameRunning) {\n            if (chess.turn() === bot) {\n                // playerColor = playerColor === 'white' ? 'black' : 'white';\n                uciCmd(\"position startpos moves\" + get_moves());\n                uciCmd(\"position startpos moves\" + get_moves(), evaler);\n                uciCmd(\"eval\", evaler);\n\n                // isEngineRunning = true;\n            }\n        }\n    };\n\n    evaler.onmessage = function (event) {\n        let line;\n\n        if (event && typeof event === \"object\") {\n            line = event.data;\n        } else {\n            line = event;\n        }\n\n        // console.log('evaler: ' + line);\n\n        /// Ignore some output.\n        if (\n            line === \"uciok\" ||\n            line === \"readyok\" ||\n            line.substr(0, 11) === \"option name\"\n        ) {\n            return;\n        }\n    };\n\n    engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n            line = event.data;\n        } else {\n            line = event;\n        }\n        // console.log('Reply: ' + line);\n        //console.log(engineStatus)\n        if (line === \"uciok\") {\n            engineStatus.engineLoaded = true;\n        } else if (line === \"readyok\") {\n            engineStatus.engineReady = true;\n        } else {\n            let match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/);\n            /// Did the AI move?\n            if (match) {\n                // isEngineRunning = false;\n                console.log(match)\n                chess.move({ from: match[1], to: match[2], promotion: match[3] });\n                setPosition(chess.fen())\n                prepareMove();\n                uciCmd(\"eval\", evaler);\n                //uciCmd(\"eval\");\n                /// Is it sending feedback?\n            } else if (\n                (match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/))\n            ) {\n                engineStatus.search = \"Depth: \" + match[1] + \" Nps: \" + match[2];\n            }\n\n            /// Is it sending feed back with a score?\n            if ((match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/))) {\n                let score = parseInt(match[2], 10) * (chess.turn() === \"w\" ? 1 : -1);\n                /// Is it measuring in centipawns?\n                if (match[1] === \"cp\") {\n                    engineStatus.score = (score / 100.0).toFixed(2);\n                    /// Did it find a mate?\n                } else if (match[1] === \"mate\") {\n                    engineStatus.score = \"Mate in \" + Math.abs(score);\n                }\n\n                /// Is the score bounded?\n                if ((match = line.match(/\\b(upper|lower)bound\\b/))) {\n                    engineStatus.score =\n                        ((match[1] === \"upper\") === (chess.turn() === \"w\")\n                            ? \"<= \"\n                            : \">= \") + engineStatus.score;\n                }\n            }\n        }\n        // displayStatus();\n    };\n\n    return (\n        <div>\n            <div>\n                <ChessBoard orientation={props.color} width={600}\n                    position={position} onDrop={move} onSquareClick={movePiece} squareStyles={squareStyles} />\n            </div>\n            <div style={{\n                position: 'absolute', backgroundColor: 'white',\n                fontSize: '36px', width: '140px', textAlign: 'right',\n                borderRadius: '6px', left: '460px', top: '624px'\n            }}>\n                {props.color === \"white\" ?\n                    formatTime(whiteTimer)\n                    :\n                    formatTime(blackTimer)\n                }\n            </div>\n            <div style={{\n                position: 'absolute', backgroundColor: 'white',\n                fontSize: '36px', width: '140px', textAlign: 'right',\n                borderRadius: '6px', left: '460px', top: '-30px'\n            }}>\n                {props.color === \"white\" ?\n                    formatTime(blackTimer)\n                    :\n                    formatTime(whiteTimer)\n                }\n            </div>\n\n            <div style={{ overflow: 'scroll', display: 'inline-block', height: '600px', width: '200px', position: 'absolute', top: '20px', right: '-250px', color: 'white', backgroundColor: 'black' }}>\n                <div style={{ width: 'auto', textAlign: 'center', fontSize: '24px' }}>Game Moves</div>\n\n                {\n                    moves.map((move, i) => (\n                        <p style={{ display: 'flex', justifyContent: 'space-between', width: '160px' }}>\n                            <span style={{ position: 'absolute', left: '0px' }}>&nbsp;{i + 1}</span>\n                            {positionIndex === 2 * i + 1 ?\n                                <span onClick={() => changePosition(2 * i + 1)} style={{ position: 'absolute', left: '40px', backgroundColor: 'white', color: 'black' }}>{move[0]}</span>\n                                :\n                                <span onClick={() => changePosition(2 * i + 1)} style={{ position: 'absolute', left: '40px' }}>{move[0]}</span>\n                            }\n                            {positionIndex === 2 * i + 2 ?\n                                <span onClick={() => changePosition(2 * i + 2)} style={{ position: 'absolute', left: '120px', backgroundColor: 'white', color: 'black' }}>{move[1]}</span>\n                                :\n                                <span onClick={() => changePosition(2 * i + 2)} style={{ position: 'absolute', left: '120px' }}>{move[1]}</span>\n                            }\n\n                            <br />\n                        </p>\n                    ))\n                }\n            </div>\n            <div style={{ textAlign: 'center', backgroundColor: 'white', width: '200px', position: 'absolute', top: '620px', right: '-250px', height: '40px' }}>\n                <span onClick={() => changePosition(0)} style={{ fontSize: '36px' }}>&laquo;</span>\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positionIndex - 1)} style={{ fontSize: '36px' }}>&lt;</span>\n                &nbsp;\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positionIndex + 1)} style={{ fontSize: '36px' }}>&gt;</span>\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positions.length - 1)} style={{ fontSize: '36px' }}>&raquo;</span>\n            </div>\n            {\n                gameRunning !== 'running' ?\n                    gameEndReason === 'checkmate' || gameEndReason === 'timeout' ?\n                        <div style={{\n                            position: 'absolute', fontSize: '36px',\n                            backgroundColor: 'white', bottom: '-100px',\n                            borderRadius: '8px'\n                        }}>\n                            {gameRunning} won the game by {gameEndReason}!\n                        </div>\n                        :\n                        <div style={{\n                            position: 'absolute', fontSize: '36px',\n                            backgroundColor: 'white', bottom: '-100px',\n                            borderRadius: '8px'\n                        }}>\n                            Game ended in a draw by {gameEndReason}!\n                        </div>\n                    :\n                    null\n            }\n        </div>\n    );\n}\n\nexport default memo(Board);\n","/Users/uayevan/Desktop/ChessApp/client/src/components/ChessBoard.js",["68","69","70","71","72","73","74","75","76","77","78","79"],"import React from 'react';\nimport $ from 'jquery'\nimport Chessboard from 'chessboardjsx'\nimport Chess from 'chess.js'\nimport { useState, useEffect, useContext, memo } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction ChessBoard(props) {\n    return(\n        <div>\n            <Chessboard orientation={props.orientation} width={props.width} position={props.position} onDrop={props.onDrop} onSquareClick={props.onSquareClick} squareStyles={props.squareStyles}/>\n        </div>\n    );\n}\n\nexport default memo(ChessBoard);    \n",["80","81"],"/Users/uayevan/Desktop/ChessApp/client/src/components/Gamepage.js",["82","83","84","85","86","87","88","89","90","91"],"import React from 'react'\nimport Board from './Board.js'\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Gamepage(props) {\n    return(\n        <div style={{backgroundColor: 'grey', height: '100vh', width: '100vw', top: '8vh', position: 'absolute'}}>\n            <div style={{position: 'absolute', left: '25%', top: '5%'}}>\n                <div style={{position: 'absolute', color: 'white', left: '0%', top: '-1%'}}>Bob (1200)</div>\n                <br/>\n                <Board color={props.location.state[0].player} timer={props.location.state[0].timer} increment={props.location.state[0].increment}/>\n                <div style={{color: 'white', position: 'absolute', top: '101%', left: '0%'}}>{props.location.state[0].name} ({props.location.state[0].elo})</div>\n            </div>\n            <br/>\n        </div>\n    );\n}\n\nexport default Gamepage;\n","/Users/uayevan/Desktop/ChessApp/client/src/components/Navbar.js",["92","93","94","95","96","97"],"import React, { useContext, useReducer } from 'react'\nimport { Link } from 'react-router-dom'\nimport  { useState } from 'react';\n\nfunction Navbar() {\n     \n    const [textField, setTextField] = useState('');\n    const [filter, setFilter] = useState('all');\n    //const [userObject, setuserObject] = useState(userObject);\n    //replace userObject \n    return (\n      <div style={{zIndex: '6', width: '100vw', height: '8vh', position: 'fixed', backgroundColor: 'white'}}>\n          <Link to=\"/\">\n            <div style={{position: 'absolute', backgroundColor: 'lightblue', width: 'auto', height: '100%', fontSize: '8vh'}}>\n                FeenChess\n            </div>\n          </Link>\n          \n      </div>  \n    );\n  }\n\nexport default Navbar;",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":42,"nodeType":"104","messageId":"105","endLine":1,"endColumn":50},{"ruleId":"102","severity":1,"message":"106","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":13},{"ruleId":"102","severity":1,"message":"107","line":3,"column":20,"nodeType":"104","messageId":"105","endLine":3,"endColumn":29},{"ruleId":"102","severity":1,"message":"108","line":3,"column":31,"nodeType":"104","messageId":"105","endLine":3,"endColumn":41},{"ruleId":"102","severity":1,"message":"109","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"110","line":4,"column":15,"nodeType":"104","messageId":"105","endLine":4,"endColumn":19},{"ruleId":"102","severity":1,"message":"111","line":4,"column":21,"nodeType":"104","messageId":"105","endLine":4,"endColumn":28},{"ruleId":"102","severity":1,"message":"112","line":4,"column":30,"nodeType":"104","messageId":"105","endLine":4,"endColumn":38},{"ruleId":"102","severity":1,"message":"113","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":21},{"ruleId":"102","severity":1,"message":"114","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"98","replacedBy":"115"},{"ruleId":"100","replacedBy":"116"},{"ruleId":"102","severity":1,"message":"117","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":9},{"ruleId":"102","severity":1,"message":"108","line":5,"column":31,"nodeType":"104","messageId":"105","endLine":5,"endColumn":41},{"ruleId":"102","severity":1,"message":"109","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"102","severity":1,"message":"110","line":6,"column":15,"nodeType":"104","messageId":"105","endLine":6,"endColumn":19},{"ruleId":"102","severity":1,"message":"111","line":6,"column":21,"nodeType":"104","messageId":"105","endLine":6,"endColumn":28},{"ruleId":"102","severity":1,"message":"112","line":6,"column":30,"nodeType":"104","messageId":"105","endLine":6,"endColumn":38},{"ruleId":"102","severity":1,"message":"113","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"118","line":7,"column":23,"nodeType":"104","messageId":"105","endLine":7,"endColumn":27},{"ruleId":"102","severity":1,"message":"114","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":13},{"ruleId":"102","severity":1,"message":"119","line":16,"column":19,"nodeType":"104","messageId":"105","endLine":16,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":96,"column":26,"nodeType":"104","messageId":"122","endLine":96,"endColumn":27},{"ruleId":"102","severity":1,"message":"117","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":9},{"ruleId":"102","severity":1,"message":"123","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"124","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":18},{"ruleId":"102","severity":1,"message":"107","line":5,"column":20,"nodeType":"104","messageId":"105","endLine":5,"endColumn":29},{"ruleId":"102","severity":1,"message":"108","line":5,"column":31,"nodeType":"104","messageId":"105","endLine":5,"endColumn":41},{"ruleId":"102","severity":1,"message":"109","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"102","severity":1,"message":"110","line":6,"column":15,"nodeType":"104","messageId":"105","endLine":6,"endColumn":19},{"ruleId":"102","severity":1,"message":"111","line":6,"column":21,"nodeType":"104","messageId":"105","endLine":6,"endColumn":28},{"ruleId":"102","severity":1,"message":"112","line":6,"column":30,"nodeType":"104","messageId":"105","endLine":6,"endColumn":38},{"ruleId":"102","severity":1,"message":"113","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"118","line":7,"column":23,"nodeType":"104","messageId":"105","endLine":7,"endColumn":27},{"ruleId":"102","severity":1,"message":"114","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":13},{"ruleId":"98","replacedBy":"125"},{"ruleId":"100","replacedBy":"126"},{"ruleId":"102","severity":1,"message":"124","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":18},{"ruleId":"102","severity":1,"message":"107","line":3,"column":20,"nodeType":"104","messageId":"105","endLine":3,"endColumn":29},{"ruleId":"102","severity":1,"message":"108","line":3,"column":31,"nodeType":"104","messageId":"105","endLine":3,"endColumn":41},{"ruleId":"102","severity":1,"message":"109","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"110","line":4,"column":15,"nodeType":"104","messageId":"105","endLine":4,"endColumn":19},{"ruleId":"102","severity":1,"message":"111","line":4,"column":21,"nodeType":"104","messageId":"105","endLine":4,"endColumn":28},{"ruleId":"102","severity":1,"message":"112","line":4,"column":30,"nodeType":"104","messageId":"105","endLine":4,"endColumn":38},{"ruleId":"102","severity":1,"message":"113","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":21},{"ruleId":"102","severity":1,"message":"118","line":5,"column":23,"nodeType":"104","messageId":"105","endLine":5,"endColumn":27},{"ruleId":"102","severity":1,"message":"114","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"102","severity":1,"message":"108","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":27},{"ruleId":"102","severity":1,"message":"127","line":1,"column":29,"nodeType":"104","messageId":"105","endLine":1,"endColumn":39},{"ruleId":"102","severity":1,"message":"128","line":7,"column":12,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"129","line":7,"column":23,"nodeType":"104","messageId":"105","endLine":7,"endColumn":35},{"ruleId":"102","severity":1,"message":"130","line":8,"column":12,"nodeType":"104","messageId":"105","endLine":8,"endColumn":18},{"ruleId":"102","severity":1,"message":"131","line":8,"column":20,"nodeType":"104","messageId":"105","endLine":8,"endColumn":29},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Board' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'useLocation' is defined but never used.","'axios' is defined but never used.",["132"],["133"],"'$' is defined but never used.","'Link' is defined but never used.","'setChess' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'Chess' is defined but never used.","'useState' is defined but never used.",["132"],["133"],"'useReducer' is defined but never used.","'textField' is assigned a value but never used.","'setTextField' is assigned a value but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]