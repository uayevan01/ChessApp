{"ast":null,"code":"var _jsxFileName = \"/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport $ from 'jquery';\nimport Chessboard from 'chessboardjsx';\nimport ChessBoard from './ChessBoard.js';\nimport Chess from 'chess.js';\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [selected, setSelected] = useState('x');\n  const [position, setPosition] = useState('start');\n  const [chess, setChess] = useState(new Chess());\n  const [squareStyles, setSquareStyles] = useState({});\n\n  const move = theMove => {\n    console.log(theMove);\n    chess.move({\n      from: theMove.sourceSquare,\n      to: theMove.targetSquare\n    });\n    setPosition(chess.fen());\n    console.log(chess.ascii());\n  };\n\n  const movePiece = square => {\n    console.log(square);\n    console.log(chess.get(square));\n\n    if (chess.get(square) && chess.get(square).color === chess.turn()) {\n      setSelected(square);\n      let highlightedSquares = {};\n      highlightedSquares[square] = {\n        backgroundColor: \"#0000ff\"\n      };\n      let moves = chess.moves({\n        square: square,\n        verbose: true\n      });\n\n      if (moves.length === 0) {\n        setSelected('x');\n        setSquareStyles({});\n        return;\n      }\n\n      let squaresToHighlight = [];\n\n      for (var i = 0; i < moves.length; i++) {\n        squaresToHighlight.push(moves[i].to);\n      }\n\n      console.log(squaresToHighlight);\n\n      for (var i = 0; i < squaresToHighlight.length; i++) {\n        highlightedSquares[squaresToHighlight[i]] = {\n          background: \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n          borderRadius: \"50%\"\n        };\n      }\n\n      setSquareStyles(highlightedSquares);\n    } else if (selected !== 'x') {\n      chess.move({\n        from: selected,\n        to: square\n      });\n      setPosition(chess.fen());\n      console.log(chess.ascii());\n      setSelected('x');\n      setSquareStyles({});\n    }\n  };\n\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(ChessBoard, {\n      position: position,\n      onDrop: move,\n      onSquareClick: movePiece,\n      squareStyles: squareStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        whiteSpace: 'pre'\n      },\n      children: chess.ascii()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chess.fen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"Jlo7zM43xxQxfV+wwFL+jh+W2PY=\");\n\n_c = Board;\nexport default function RandomVsRandomGame() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      children: _ref => {\n        let {\n          position\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Chessboard, {\n          width: 320,\n          id: \"random\",\n          position: position,\n          transitionDuration: 300,\n          boardStyle: {\n            borderRadius: \"5px\",\n            boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n}\n_c2 = RandomVsRandomGame;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"RandomVsRandomGame\");","map":{"version":3,"sources":["/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js"],"names":["React","$","Chessboard","ChessBoard","Chess","useState","useEffect","useContext","Tab","Tabs","TabList","TabPanel","useLocation","Link","axios","Board","props","selected","setSelected","position","setPosition","chess","setChess","squareStyles","setSquareStyles","move","theMove","console","log","from","sourceSquare","to","targetSquare","fen","ascii","movePiece","square","get","color","turn","highlightedSquares","backgroundColor","moves","verbose","length","squaresToHighlight","i","push","background","borderRadius","whiteSpace","RandomVsRandomGame","boxShadow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,GAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAID,KAAJ,EAAD,CAAlC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMoB,IAAI,GAAIC,OAAD,IAAa;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,IAAAA,KAAK,CAACI,IAAN,CAAW;AAACI,MAAAA,IAAI,EAAEH,OAAO,CAACI,YAAf;AAA6BC,MAAAA,EAAE,EAAEL,OAAO,CAACM;AAAzC,KAAX;AACAZ,IAAAA,WAAW,CAACC,KAAK,CAACY,GAAN,EAAD,CAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACa,KAAN,EAAZ;AACH,GALD;;AAOA,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAC1BT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACgB,GAAN,CAAUD,MAAV,CAAZ;;AACA,QAAGf,KAAK,CAACgB,GAAN,CAAUD,MAAV,KAAqBf,KAAK,CAACgB,GAAN,CAAUD,MAAV,EAAkBE,KAAlB,KAA4BjB,KAAK,CAACkB,IAAN,EAApD,EAAkE;AAC9DrB,MAAAA,WAAW,CAACkB,MAAD,CAAX;AACA,UAAII,kBAAkB,GAAG,EAAzB;AACAA,MAAAA,kBAAkB,CAACJ,MAAD,CAAlB,GACA;AACIK,QAAAA,eAAe,EAAE;AADrB,OADA;AAIA,UAAIC,KAAK,GAAGrB,KAAK,CAACqB,KAAN,CAAY;AACpBN,QAAAA,MAAM,EAAEA,MADY;AAEpBO,QAAAA,OAAO,EAAE;AAFW,OAAZ,CAAZ;;AAIE,UAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACpB1B,QAAAA,WAAW,CAAC,GAAD,CAAX;AACAM,QAAAA,eAAe,CAAC,EAAD,CAAf;AACA;AACH;;AAED,UAAIqB,kBAAkB,GAAG,EAAzB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACE,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,kBAAkB,CAACE,IAAnB,CAAwBL,KAAK,CAACI,CAAD,CAAL,CAASf,EAAjC;AACD;;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAYiB,kBAAZ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,kBAAkB,CAACD,MAAtC,EAA8CE,CAAC,EAA/C,EAAoD;AAClDN,QAAAA,kBAAkB,CAACK,kBAAkB,CAACC,CAAD,CAAnB,CAAlB,GACA;AACIE,UAAAA,UAAU,EACV,uDAFJ;AAGIC,UAAAA,YAAY,EAAE;AAHlB,SADA;AAMD;;AACDzB,MAAAA,eAAe,CAACgB,kBAAD,CAAf;AACL,KA/BD,MAgCK,IAAGvB,QAAQ,KAAK,GAAhB,EAAqB;AACtBI,MAAAA,KAAK,CAACI,IAAN,CAAW;AAACI,QAAAA,IAAI,EAAEZ,QAAP;AAAiBc,QAAAA,EAAE,EAAEK;AAArB,OAAX;AACAhB,MAAAA,WAAW,CAACC,KAAK,CAACY,GAAN,EAAD,CAAX;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACa,KAAN,EAAZ;AACAhB,MAAAA,WAAW,CAAC,GAAD,CAAX;AACAM,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;AACJ,GA1CD;;AA4CAlB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAGA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEa,QAAtB;AAAgC,MAAA,MAAM,EAAEM,IAAxC;AAA8C,MAAA,aAAa,EAAEU,SAA7D;AAAwE,MAAA,YAAY,EAAEZ;AAAtF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAC2B,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA,gBAAkC7B,KAAK,CAACa,KAAN;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAMf;AAAN;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAME,KAAK,CAACY,GAAN;AAAN;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAtEQlB,K;;KAAAA,K;AAwET,eAAe,SAASoC,kBAAT,GAA8B;AACzC,sBACE;AAAA,2BACE,QAAC,KAAD;AAAA,gBACG;AAAA,YAAC;AAAEhC,UAAAA;AAAF,SAAD;AAAA,4BACC,QAAC,UAAD;AACE,UAAA,KAAK,EAAE,GADT;AAEE,UAAA,EAAE,EAAC,QAFL;AAGE,UAAA,QAAQ,EAAEA,QAHZ;AAIE,UAAA,kBAAkB,EAAE,GAJtB;AAKE,UAAA,UAAU,EAAE;AACV8B,YAAAA,YAAY,EAAE,KADJ;AAEVG,YAAAA,SAAS,EAAG;AAFF;AALd;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;MAnBqBD,kB;AAmBrB","sourcesContent":["import React from 'react';\nimport $ from 'jquery'\nimport Chessboard from 'chessboardjsx'\nimport ChessBoard from './ChessBoard.js'\nimport Chess from 'chess.js'\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Board(props) {\n    const [selected, setSelected] = useState('x')\n    const [position, setPosition] = useState('start')\n    const [chess, setChess] = useState(new Chess())\n    const [squareStyles, setSquareStyles] = useState({})\n\n\n    const move = (theMove) => {\n        console.log(theMove)\n        chess.move({from: theMove.sourceSquare, to: theMove.targetSquare})\n        setPosition(chess.fen())\n        console.log(chess.ascii())\n    }\n\n    const movePiece = (square) => {\n        console.log(square)\n        console.log(chess.get(square))\n        if(chess.get(square) && chess.get(square).color === chess.turn()) {\n            setSelected(square)\n            let highlightedSquares = {};\n            highlightedSquares[square] = \n            {\n                backgroundColor: \"#0000ff\"\n            }\n            let moves = chess.moves({\n                square: square,\n                verbose: true\n              });\n              if (moves.length === 0) {\n                  setSelected('x');\n                  setSquareStyles({})\n                  return;\n              }\n          \n              let squaresToHighlight = [];\n              for (var i = 0; i < moves.length; i++) {\n                squaresToHighlight.push(moves[i].to);\n              }\n              console.log(squaresToHighlight)\n              for(var i = 0; i < squaresToHighlight.length; i ++) {\n                highlightedSquares[squaresToHighlight[i]] = \n                {\n                    background:\n                    \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n                    borderRadius: \"50%\"\n                }\n              }\n              setSquareStyles(highlightedSquares)\n        }\n        else if(selected !== 'x') {\n            chess.move({from: selected, to: square})\n            setPosition(chess.fen())\n            console.log(chess.ascii())\n            setSelected('x')\n            setSquareStyles({})\n        }\n    }\n\n    useEffect(() => {\n\n    })\n    return(\n        <body>\n            <ChessBoard position={position} onDrop={move} onSquareClick={movePiece} squareStyles={squareStyles}/>\n            <div style={{whiteSpace: 'pre'}}>{chess.ascii()}</div>\n            <div>{position}</div>\n            <div>{chess.fen()}</div>\n            \n        </body>\n    );\n}\n\nexport default function RandomVsRandomGame() {\n    return (\n      <div>\n        <Board>\n          {({ position }) => (\n            <Chessboard\n              width={320}\n              id=\"random\"\n              position={position}\n              transitionDuration={300}\n              boardStyle={{\n                borderRadius: \"5px\",\n                boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n              }}\n            />\n          )}\n        </Board>\n      </div>\n    );\n  };\n"]},"metadata":{},"sourceType":"module"}