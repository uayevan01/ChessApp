{"ast":null,"code":"/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\n//------------------------------------------------------------------------------\n// Chess Util Functions\n//------------------------------------------------------------------------------\nvar COLUMNS = 'abcdefgh'.split('');\n\nfunction validMove(move) {\n  // move should be a string\n  if (typeof move !== 'string') return false; // move should be in the form of \"e2-e4\", \"f6-d5\"\n\n  var tmp = move.split('-');\n  if (tmp.length !== 2) return false;\n  return validSquare(tmp[0]) === true && validSquare(tmp[1]) === true;\n}\n\nfunction validSquare(square) {\n  if (typeof square !== 'string') return false;\n  return square.search(/^[a-h][1-8]$/) !== -1;\n}\n\nfunction validPieceCode(code) {\n  if (typeof code !== 'string') return false;\n  return code.search(/^[bw][KQRNBP]$/) !== -1;\n} // TODO: this whole function could probably be replaced with a single regex\n\n\nfunction validFen(fen) {\n  if (typeof fen !== 'string') return false; // cut off any move, castling, etc info from the end\n  // we're only interested in position information\n\n  fen = fen.replace(/ .+$/, ''); // FEN should be 8 sections separated by slashes\n\n  var chunks = fen.split('/');\n  if (chunks.length !== 8) return false; // check the piece sections\n\n  for (var i = 0; i < 8; i++) {\n    if (chunks[i] === '' || chunks[i].length > 8 || chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validPositionObject(pos) {\n  if (typeof pos !== 'object') return false;\n\n  for (var i in pos) {\n    if (pos.hasOwnProperty(i) !== true) continue;\n\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\n      return false;\n    }\n  }\n\n  return true;\n} // convert FEN piece code to bP, wK, etc\n\n\nfunction fenToPieceCode(piece) {\n  // black piece\n  if (piece.toLowerCase() === piece) {\n    return 'b' + piece.toUpperCase();\n  } // white piece\n\n\n  return 'w' + piece.toUpperCase();\n} // convert bP, wK, etc code to FEN structure\n\n\nfunction pieceCodeToFen(piece) {\n  var tmp = piece.split(''); // white piece\n\n  if (tmp[0] === 'w') {\n    return tmp[1].toUpperCase();\n  } // black piece\n\n\n  return tmp[1].toLowerCase();\n} // convert FEN string to position object\n// returns false if the FEN string is invalid\n\n\nfunction fenToObj(fen) {\n  if (validFen(fen) !== true) {\n    return false;\n  } // cut off any move, castling, etc info from the end\n  // we're only interested in position information\n\n\n  fen = fen.replace(/ .+$/, '');\n  var rows = fen.split('/');\n  var position = {};\n  var currentRow = 8;\n\n  for (var i = 0; i < 8; i++) {\n    var row = rows[i].split('');\n    var colIndex = 0; // loop through each character in the FEN section\n\n    for (var j = 0; j < row.length; j++) {\n      // number / empty squares\n      if (row[j].search(/[1-8]/) !== -1) {\n        var emptySquares = parseInt(row[j], 10);\n        colIndex += emptySquares;\n      } // piece\n      else {\n        var square = COLUMNS[colIndex] + currentRow;\n        position[square] = fenToPieceCode(row[j]);\n        colIndex++;\n      }\n    }\n\n    currentRow--;\n  }\n\n  return position;\n} // position object to FEN string\n// returns false if the obj is not a valid position object\n\n\nfunction objToFen(obj) {\n  if (validPositionObject(obj) !== true) {\n    return false;\n  }\n\n  var fen = '';\n  var currentRow = 8;\n\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      var square = COLUMNS[j] + currentRow; // piece exists\n\n      if (obj.hasOwnProperty(square) === true) {\n        fen += pieceCodeToFen(obj[square]);\n      } // empty space\n      else {\n        fen += '1';\n      }\n    }\n\n    if (i !== 7) {\n      fen += '/';\n    }\n\n    currentRow--;\n  } // squeeze the numbers together\n  // haha, I love this solution...\n\n\n  fen = fen.replace(/11111111/g, '8');\n  fen = fen.replace(/1111111/g, '7');\n  fen = fen.replace(/111111/g, '6');\n  fen = fen.replace(/11111/g, '5');\n  fen = fen.replace(/1111/g, '4');\n  fen = fen.replace(/111/g, '3');\n  fen = fen.replace(/11/g, '2');\n  return fen;\n}\n\nvar ChessBoard = function (containerElOrId, cfg) {\n  cfg = cfg || {}; //------------------------------------------------------------------------------\n  // Constants\n  //------------------------------------------------------------------------------\n\n  var MINIMUM_JQUERY_VERSION = '1.7.0',\n      START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\n      START_POSITION = fenToObj(START_FEN); // use unique class names to prevent clashing with anything else on the page\n  // and simplify selectors\n  // NOTE: these should never change\n\n  var CSS = {\n    alpha: 'alpha-d2270',\n    black: 'black-3c85d',\n    board: 'board-b72b1',\n    chessboard: 'chessboard-63f37',\n    clearfix: 'clearfix-7da63',\n    highlight1: 'highlight1-32417',\n    highlight2: 'highlight2-9c5d2',\n    notation: 'notation-322f9',\n    numeric: 'numeric-fc462',\n    piece: 'piece-417db',\n    row: 'row-5277c',\n    sparePieces: 'spare-pieces-7492f',\n    sparePiecesBottom: 'spare-pieces-bottom-ae20f',\n    sparePiecesTop: 'spare-pieces-top-4028b',\n    square: 'square-55d63',\n    white: 'white-1e1d7'\n  }; //------------------------------------------------------------------------------\n  // Module Scope Variables\n  //------------------------------------------------------------------------------\n  // DOM elements\n\n  var containerEl, boardEl, draggedPieceEl, sparePiecesTopEl, sparePiecesBottomEl; // constructor return object\n\n  var widget = {}; //------------------------------------------------------------------------------\n  // Stateful\n  //------------------------------------------------------------------------------\n\n  var ANIMATION_HAPPENING = false,\n      BOARD_BORDER_SIZE = 2,\n      CURRENT_ORIENTATION = 'white',\n      CURRENT_POSITION = {},\n      SQUARE_SIZE,\n      DRAGGED_PIECE,\n      DRAGGED_PIECE_LOCATION,\n      DRAGGED_PIECE_SOURCE,\n      DRAGGING_A_PIECE = false,\n      SPARE_PIECE_ELS_IDS = {},\n      SQUARE_ELS_IDS = {},\n      SQUARE_ELS_OFFSETS; //------------------------------------------------------------------------------\n  // JS Util Functions\n  //------------------------------------------------------------------------------\n  // http://tinyurl.com/3ttloxj\n\n  function uuid() {\n    return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function (c) {\n      var r = Math.random() * 16 | 0;\n      return r.toString(16);\n    });\n  }\n\n  function deepCopy(thing) {\n    return JSON.parse(JSON.stringify(thing));\n  }\n\n  function parseSemVer(version) {\n    var tmp = version.split('.');\n    return {\n      major: parseInt(tmp[0], 10),\n      minor: parseInt(tmp[1], 10),\n      patch: parseInt(tmp[2], 10)\n    };\n  } // returns true if version is >= minimum\n\n\n  function compareSemVer(version, minimum) {\n    version = parseSemVer(version);\n    minimum = parseSemVer(minimum);\n    var versionNum = version.major * 10000 * 10000 + version.minor * 10000 + version.patch;\n    var minimumNum = minimum.major * 10000 * 10000 + minimum.minor * 10000 + minimum.patch;\n    return versionNum >= minimumNum;\n  } //------------------------------------------------------------------------------\n  // Validation / Errors\n  //------------------------------------------------------------------------------\n\n\n  function error(code, msg, obj) {\n    // do nothing if showErrors is not set\n    if (cfg.hasOwnProperty('showErrors') !== true || cfg.showErrors === false) {\n      return;\n    }\n\n    var errorText = 'ChessBoard Error ' + code + ': ' + msg; // print to console\n\n    if (cfg.showErrors === 'console' && typeof console === 'object' && typeof console.log === 'function') {\n      console.log(errorText);\n\n      if (arguments.length >= 2) {\n        console.log(obj);\n      }\n\n      return;\n    } // alert errors\n\n\n    if (cfg.showErrors === 'alert') {\n      if (obj) {\n        errorText += '\\n\\n' + JSON.stringify(obj);\n      }\n\n      window.alert(errorText);\n      return;\n    } // custom function\n\n\n    if (typeof cfg.showErrors === 'function') {\n      cfg.showErrors(code, msg, obj);\n    }\n  } // check dependencies\n\n\n  function checkDeps() {\n    // if containerId is a string, it must be the ID of a DOM node\n    if (typeof containerElOrId === 'string') {\n      // cannot be empty\n      if (containerElOrId === '') {\n        window.alert('ChessBoard Error 1001: ' + 'The first argument to ChessBoard() cannot be an empty string.' + '\\n\\nExiting...');\n        return false;\n      } // make sure the container element exists in the DOM\n\n\n      var el = document.getElementById(containerElOrId);\n\n      if (!el) {\n        window.alert('ChessBoard Error 1002: Element with id \"' + containerElOrId + '\" does not exist in the DOM.' + '\\n\\nExiting...');\n        return false;\n      } // set the containerEl\n\n\n      containerEl = $(el);\n    } // else it must be something that becomes a jQuery collection\n    // with size 1\n    // ie: a single DOM node or jQuery object\n    else {\n      containerEl = $(containerElOrId);\n\n      if (containerEl.length !== 1) {\n        window.alert('ChessBoard Error 1003: The first argument to ' + 'ChessBoard() must be an ID or a single DOM node.' + '\\n\\nExiting...');\n        return false;\n      }\n    } // JSON must exist\n\n\n    if (!window.JSON || typeof JSON.stringify !== 'function' || typeof JSON.parse !== 'function') {\n      window.alert('ChessBoard Error 1004: JSON does not exist. ' + 'Please include a JSON polyfill.\\n\\nExiting...');\n      return false;\n    } // check for a compatible version of jQuery\n\n\n    if (!(typeof window.$ && $.fn && $.fn.jquery && compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\n      window.alert('ChessBoard Error 1005: Unable to find a valid version ' + 'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' + 'higher on the page.\\n\\nExiting...');\n      return false;\n    }\n\n    return true;\n  }\n\n  function validAnimationSpeed(speed) {\n    if (speed === 'fast' || speed === 'slow') {\n      return true;\n    }\n\n    if (parseInt(speed, 10) + '' !== speed + '') {\n      return false;\n    }\n\n    return speed >= 0;\n  } // validate config / set default options\n\n\n  function expandConfig() {\n    if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\n      cfg = {\n        position: cfg\n      };\n    } // default for orientation is white\n\n\n    if (cfg.orientation !== 'black') {\n      cfg.orientation = 'white';\n    }\n\n    CURRENT_ORIENTATION = cfg.orientation; // default for showNotation is true\n\n    if (cfg.showNotation !== false) {\n      cfg.showNotation = true;\n    } // default for draggable is false\n\n\n    if (cfg.draggable !== true) {\n      cfg.draggable = false;\n    } // default for dropOffBoard is 'snapback'\n\n\n    if (cfg.dropOffBoard !== 'trash') {\n      cfg.dropOffBoard = 'snapback';\n    } // default for sparePieces is false\n\n\n    if (cfg.sparePieces !== true) {\n      cfg.sparePieces = false;\n    } // draggable must be true if sparePieces is enabled\n\n\n    if (cfg.sparePieces === true) {\n      cfg.draggable = true;\n    } // default piece theme is wikipedia\n\n\n    if (cfg.hasOwnProperty('pieceTheme') !== true || typeof cfg.pieceTheme !== 'string' && typeof cfg.pieceTheme !== 'function') {\n      cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\n    } // animation speeds\n\n\n    if (cfg.hasOwnProperty('appearSpeed') !== true || validAnimationSpeed(cfg.appearSpeed) !== true) {\n      cfg.appearSpeed = 200;\n    }\n\n    if (cfg.hasOwnProperty('moveSpeed') !== true || validAnimationSpeed(cfg.moveSpeed) !== true) {\n      cfg.moveSpeed = 200;\n    }\n\n    if (cfg.hasOwnProperty('snapbackSpeed') !== true || validAnimationSpeed(cfg.snapbackSpeed) !== true) {\n      cfg.snapbackSpeed = 50;\n    }\n\n    if (cfg.hasOwnProperty('snapSpeed') !== true || validAnimationSpeed(cfg.snapSpeed) !== true) {\n      cfg.snapSpeed = 25;\n    }\n\n    if (cfg.hasOwnProperty('trashSpeed') !== true || validAnimationSpeed(cfg.trashSpeed) !== true) {\n      cfg.trashSpeed = 100;\n    } // make sure position is valid\n\n\n    if (cfg.hasOwnProperty('position') === true) {\n      if (cfg.position === 'start') {\n        CURRENT_POSITION = deepCopy(START_POSITION);\n      } else if (validFen(cfg.position) === true) {\n        CURRENT_POSITION = fenToObj(cfg.position);\n      } else if (validPositionObject(cfg.position) === true) {\n        CURRENT_POSITION = deepCopy(cfg.position);\n      } else {\n        error(7263, 'Invalid value passed to config.position.', cfg.position);\n      }\n    }\n\n    return true;\n  } //------------------------------------------------------------------------------\n  // DOM Misc\n  //------------------------------------------------------------------------------\n  // calculates square size based on the width of the container\n  // got a little CSS black magic here, so let me explain:\n  // get the width of the container element (could be anything), reduce by 1 for\n  // fudge factor, and then keep reducing until we find an exact mod 8 for\n  // our square size\n\n\n  function calculateSquareSize() {\n    var containerWidth = parseInt(containerEl.width(), 10); // defensive, prevent infinite loop\n\n    if (!containerWidth || containerWidth <= 0) {\n      return 0;\n    } // pad one pixel\n\n\n    var boardWidth = containerWidth - 1;\n\n    while (boardWidth % 8 !== 0 && boardWidth > 0) {\n      boardWidth--;\n    }\n\n    return boardWidth / 8;\n  } // create random IDs for elements\n\n\n  function createElIds() {\n    // squares on the board\n    for (var i = 0; i < COLUMNS.length; i++) {\n      for (var j = 1; j <= 8; j++) {\n        var square = COLUMNS[i] + j;\n        SQUARE_ELS_IDS[square] = square + '-' + uuid();\n      }\n    } // spare pieces\n\n\n    var pieces = 'KQRBNP'.split('');\n\n    for (var i = 0; i < pieces.length; i++) {\n      var whitePiece = 'w' + pieces[i];\n      var blackPiece = 'b' + pieces[i];\n      SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\n      SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\n    }\n  } //------------------------------------------------------------------------------\n  // Markup Building\n  //------------------------------------------------------------------------------\n\n\n  function buildBoardContainer() {\n    var html = '<div class=\"' + CSS.chessboard + '\">';\n\n    if (cfg.sparePieces === true) {\n      html += '<div class=\"' + CSS.sparePieces + ' ' + CSS.sparePiecesTop + '\"></div>';\n    }\n\n    html += '<div class=\"' + CSS.board + '\"></div>';\n\n    if (cfg.sparePieces === true) {\n      html += '<div class=\"' + CSS.sparePieces + ' ' + CSS.sparePiecesBottom + '\"></div>';\n    }\n\n    html += '</div>';\n    return html;\n  }\n  /*\r\n  var buildSquare = function(color, size, id) {\r\n    var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n    'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n    'id=\"' + id + '\">';\r\n  \r\n    if (cfg.showNotation === true) {\r\n  \r\n    }\r\n  \r\n    html += '</div>';\r\n  \r\n    return html;\r\n  };\r\n  */\n\n\n  function buildBoard(orientation) {\n    if (orientation !== 'black') {\n      orientation = 'white';\n    }\n\n    var html = ''; // algebraic notation / orientation\n\n    var alpha = deepCopy(COLUMNS);\n    var row = 8;\n\n    if (orientation === 'black') {\n      alpha.reverse();\n      row = 1;\n    }\n\n    var squareColor = 'white';\n\n    for (var i = 0; i < 8; i++) {\n      html += '<div class=\"' + CSS.row + '\">';\n\n      for (var j = 0; j < 8; j++) {\n        var square = alpha[j] + row;\n        html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' + 'square-' + square + '\" ' + 'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' + 'id=\"' + SQUARE_ELS_IDS[square] + '\" ' + 'data-square=\"' + square + '\">';\n\n        if (cfg.showNotation === true) {\n          // alpha notation\n          if (orientation === 'white' && row === 1 || orientation === 'black' && row === 8) {\n            html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' + alpha[j] + '</div>';\n          } // numeric notation\n\n\n          if (j === 0) {\n            html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' + row + '</div>';\n          }\n        }\n\n        html += '</div>'; // end .square\n\n        squareColor = squareColor === 'white' ? 'black' : 'white';\n      }\n\n      html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\n      squareColor = squareColor === 'white' ? 'black' : 'white';\n\n      if (orientation === 'white') {\n        row--;\n      } else {\n        row++;\n      }\n    }\n\n    return html;\n  }\n\n  function buildPieceImgSrc(piece) {\n    if (typeof cfg.pieceTheme === 'function') {\n      return cfg.pieceTheme(piece);\n    }\n\n    if (typeof cfg.pieceTheme === 'string') {\n      return cfg.pieceTheme.replace(/{piece}/g, piece);\n    } // NOTE: this should never happen\n\n\n    error(8272, 'Unable to build image source for cfg.pieceTheme.');\n    return '';\n  }\n\n  function buildPiece(piece, hidden, id) {\n    var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\n\n    if (id && typeof id === 'string') {\n      html += 'id=\"' + id + '\" ';\n    }\n\n    html += 'alt=\"\" ' + 'class=\"' + CSS.piece + '\" ' + 'data-piece=\"' + piece + '\" ' + 'style=\"width: ' + SQUARE_SIZE + 'px;' + 'height: ' + SQUARE_SIZE + 'px;';\n\n    if (hidden === true) {\n      html += 'display:none;';\n    }\n\n    html += '\" />';\n    return html;\n  }\n\n  function buildSparePieces(color) {\n    var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\n\n    if (color === 'black') {\n      pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\n    }\n\n    var html = '';\n\n    for (var i = 0; i < pieces.length; i++) {\n      html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\n    }\n\n    return html;\n  } //------------------------------------------------------------------------------\n  // Animations\n  //------------------------------------------------------------------------------\n\n\n  function animateSquareToSquare(src, dest, piece, completeFn) {\n    // get information about the source and destination squares\n    var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\n    var srcSquarePosition = srcSquareEl.offset();\n    var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\n    var destSquarePosition = destSquareEl.offset(); // create the animated piece and absolutely position it\n    // over the source square\n\n    var animatedPieceId = uuid();\n    $('body').append(buildPiece(piece, true, animatedPieceId));\n    var animatedPieceEl = $('#' + animatedPieceId);\n    animatedPieceEl.css({\n      display: '',\n      position: 'absolute',\n      top: srcSquarePosition.top,\n      left: srcSquarePosition.left\n    }); // remove original piece from source square\n\n    srcSquareEl.find('.' + CSS.piece).remove(); // on complete\n\n    var complete = function () {\n      // add the \"real\" piece to the destination square\n      destSquareEl.append(buildPiece(piece)); // remove the animated piece\n\n      animatedPieceEl.remove(); // run complete function\n\n      if (typeof completeFn === 'function') {\n        completeFn();\n      }\n    }; // animate the piece to the destination square\n\n\n    var opts = {\n      duration: cfg.moveSpeed,\n      complete: complete\n    };\n    animatedPieceEl.animate(destSquarePosition, opts);\n  }\n\n  function animateSparePieceToSquare(piece, dest, completeFn) {\n    var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\n    var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\n    var destOffset = destSquareEl.offset(); // create the animate piece\n\n    var pieceId = uuid();\n    $('body').append(buildPiece(piece, true, pieceId));\n    var animatedPieceEl = $('#' + pieceId);\n    animatedPieceEl.css({\n      display: '',\n      position: 'absolute',\n      left: srcOffset.left,\n      top: srcOffset.top\n    }); // on complete\n\n    var complete = function () {\n      // add the \"real\" piece to the destination square\n      destSquareEl.find('.' + CSS.piece).remove();\n      destSquareEl.append(buildPiece(piece)); // remove the animated piece\n\n      animatedPieceEl.remove(); // run complete function\n\n      if (typeof completeFn === 'function') {\n        completeFn();\n      }\n    }; // animate the piece to the destination square\n\n\n    var opts = {\n      duration: cfg.moveSpeed,\n      complete: complete\n    };\n    animatedPieceEl.animate(destOffset, opts);\n  } // execute an array of animations\n\n\n  function doAnimations(a, oldPos, newPos) {\n    if (a.length === 0) {\n      return;\n    }\n\n    ANIMATION_HAPPENING = true;\n    var numFinished = 0;\n\n    function onFinish() {\n      numFinished++; // exit if all the animations aren't finished\n\n      if (numFinished !== a.length) return;\n      drawPositionInstant();\n      ANIMATION_HAPPENING = false; // run their onMoveEnd function\n\n      if (cfg.hasOwnProperty('onMoveEnd') === true && typeof cfg.onMoveEnd === 'function') {\n        cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\n      }\n    }\n\n    for (var i = 0; i < a.length; i++) {\n      // clear a piece\n      if (a[i].type === 'clear') {\n        $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece).fadeOut(cfg.trashSpeed, onFinish);\n      } // add a piece (no spare pieces)\n\n\n      if (a[i].type === 'add' && cfg.sparePieces !== true) {\n        $('#' + SQUARE_ELS_IDS[a[i].square]).append(buildPiece(a[i].piece, true)).find('.' + CSS.piece).fadeIn(cfg.appearSpeed, onFinish);\n      } // add a piece from a spare piece\n\n\n      if (a[i].type === 'add' && cfg.sparePieces === true) {\n        animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\n      } // move a piece\n\n\n      if (a[i].type === 'move') {\n        animateSquareToSquare(a[i].source, a[i].destination, a[i].piece, onFinish);\n      }\n    }\n  } // returns the distance between two squares\n\n\n  function squareDistance(s1, s2) {\n    s1 = s1.split('');\n    var s1x = COLUMNS.indexOf(s1[0]) + 1;\n    var s1y = parseInt(s1[1], 10);\n    s2 = s2.split('');\n    var s2x = COLUMNS.indexOf(s2[0]) + 1;\n    var s2y = parseInt(s2[1], 10);\n    var xDelta = Math.abs(s1x - s2x);\n    var yDelta = Math.abs(s1y - s2y);\n    if (xDelta >= yDelta) return xDelta;\n    return yDelta;\n  } // returns an array of closest squares from square\n\n\n  function createRadius(square) {\n    var squares = []; // calculate distance of all squares\n\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var s = COLUMNS[i] + (j + 1); // skip the square we're starting from\n\n        if (square === s) continue;\n        squares.push({\n          square: s,\n          distance: squareDistance(square, s)\n        });\n      }\n    } // sort by distance\n\n\n    squares.sort(function (a, b) {\n      return a.distance - b.distance;\n    }); // just return the square code\n\n    var squares2 = [];\n\n    for (var i = 0; i < squares.length; i++) {\n      squares2.push(squares[i].square);\n    }\n\n    return squares2;\n  } // returns the square of the closest instance of piece\n  // returns false if no instance of piece is found in position\n\n\n  function findClosestPiece(position, piece, square) {\n    // create array of closest squares from square\n    var closestSquares = createRadius(square); // search through the position in order of distance for the piece\n\n    for (var i = 0; i < closestSquares.length; i++) {\n      var s = closestSquares[i];\n\n      if (position.hasOwnProperty(s) === true && position[s] === piece) {\n        return s;\n      }\n    }\n\n    return false;\n  } // calculate an array of animations that need to happen in order to get\n  // from pos1 to pos2\n\n\n  function calculateAnimations(pos1, pos2) {\n    // make copies of both\n    pos1 = deepCopy(pos1);\n    pos2 = deepCopy(pos2);\n    var animations = [];\n    var squaresMovedTo = {}; // remove pieces that are the same in both positions\n\n    for (var i in pos2) {\n      if (pos2.hasOwnProperty(i) !== true) continue;\n\n      if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\n        delete pos1[i];\n        delete pos2[i];\n      }\n    } // find all the \"move\" animations\n\n\n    for (var i in pos2) {\n      if (pos2.hasOwnProperty(i) !== true) continue;\n      var closestPiece = findClosestPiece(pos1, pos2[i], i);\n\n      if (closestPiece !== false) {\n        animations.push({\n          type: 'move',\n          source: closestPiece,\n          destination: i,\n          piece: pos2[i]\n        });\n        delete pos1[closestPiece];\n        delete pos2[i];\n        squaresMovedTo[i] = true;\n      }\n    } // add pieces to pos2\n\n\n    for (var i in pos2) {\n      if (pos2.hasOwnProperty(i) !== true) continue;\n      animations.push({\n        type: 'add',\n        square: i,\n        piece: pos2[i]\n      });\n      delete pos2[i];\n    } // clear pieces from pos1\n\n\n    for (var i in pos1) {\n      if (pos1.hasOwnProperty(i) !== true) continue; // do not clear a piece if it is on a square that is the result\n      // of a \"move\", ie: a piece capture\n\n      if (squaresMovedTo.hasOwnProperty(i) === true) continue;\n      animations.push({\n        type: 'clear',\n        square: i,\n        piece: pos1[i]\n      });\n      delete pos1[i];\n    }\n\n    return animations;\n  } //------------------------------------------------------------------------------\n  // Control Flow\n  //------------------------------------------------------------------------------\n\n\n  function drawPositionInstant() {\n    // clear the board\n    boardEl.find('.' + CSS.piece).remove(); // add the pieces\n\n    for (var i in CURRENT_POSITION) {\n      if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\n      $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\n    }\n  }\n\n  function drawBoard() {\n    boardEl.html(buildBoard(CURRENT_ORIENTATION));\n    drawPositionInstant();\n\n    if (cfg.sparePieces === true) {\n      if (CURRENT_ORIENTATION === 'white') {\n        sparePiecesTopEl.html(buildSparePieces('black'));\n        sparePiecesBottomEl.html(buildSparePieces('white'));\n      } else {\n        sparePiecesTopEl.html(buildSparePieces('white'));\n        sparePiecesBottomEl.html(buildSparePieces('black'));\n      }\n    }\n  } // given a position and a set of moves, return a new position\n  // with the moves executed\n\n\n  function calculatePositionFromMoves(position, moves) {\n    position = deepCopy(position);\n\n    for (var i in moves) {\n      if (moves.hasOwnProperty(i) !== true) continue; // skip the move if the position doesn't have a piece on the source square\n\n      if (position.hasOwnProperty(i) !== true) continue;\n      var piece = position[i];\n      delete position[i];\n      position[moves[i]] = piece;\n    }\n\n    return position;\n  }\n\n  function setCurrentPosition(position) {\n    var oldPos = deepCopy(CURRENT_POSITION);\n    var newPos = deepCopy(position);\n    var oldFen = objToFen(oldPos);\n    var newFen = objToFen(newPos); // do nothing if no change in position\n\n    if (oldFen === newFen) return; // run their onChange function\n\n    if (cfg.hasOwnProperty('onChange') === true && typeof cfg.onChange === 'function') {\n      cfg.onChange(oldPos, newPos);\n    } // update state\n\n\n    CURRENT_POSITION = position;\n  }\n\n  function isXYOnSquare(x, y) {\n    for (var i in SQUARE_ELS_OFFSETS) {\n      if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\n      var s = SQUARE_ELS_OFFSETS[i];\n\n      if (x >= s.left && x < s.left + SQUARE_SIZE && y >= s.top && y < s.top + SQUARE_SIZE) {\n        return i;\n      }\n    }\n\n    return 'offboard';\n  } // records the XY coords of every square into memory\n\n\n  function captureSquareOffsets() {\n    SQUARE_ELS_OFFSETS = {};\n\n    for (var i in SQUARE_ELS_IDS) {\n      if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\n      SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\n    }\n  }\n\n  function removeSquareHighlights() {\n    boardEl.find('.' + CSS.square).removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\n  }\n\n  function snapbackDraggedPiece() {\n    // there is no \"snapback\" for spare pieces\n    if (DRAGGED_PIECE_SOURCE === 'spare') {\n      trashDraggedPiece();\n      return;\n    }\n\n    removeSquareHighlights(); // animation complete\n\n    function complete() {\n      drawPositionInstant();\n      draggedPieceEl.css('display', 'none'); // run their onSnapbackEnd function\n\n      if (cfg.hasOwnProperty('onSnapbackEnd') === true && typeof cfg.onSnapbackEnd === 'function') {\n        cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n      }\n    } // get source square position\n\n\n    var sourceSquarePosition = $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset(); // animate the piece to the target square\n\n    var opts = {\n      duration: cfg.snapbackSpeed,\n      complete: complete\n    };\n    draggedPieceEl.animate(sourceSquarePosition, opts); // set state\n\n    DRAGGING_A_PIECE = false;\n  }\n\n  function trashDraggedPiece() {\n    removeSquareHighlights(); // remove the source piece\n\n    var newPosition = deepCopy(CURRENT_POSITION);\n    delete newPosition[DRAGGED_PIECE_SOURCE];\n    setCurrentPosition(newPosition); // redraw the position\n\n    drawPositionInstant(); // hide the dragged piece\n\n    draggedPieceEl.fadeOut(cfg.trashSpeed); // set state\n\n    DRAGGING_A_PIECE = false;\n  }\n\n  function dropDraggedPieceOnSquare(square) {\n    removeSquareHighlights(); // update position\n\n    var newPosition = deepCopy(CURRENT_POSITION);\n    delete newPosition[DRAGGED_PIECE_SOURCE];\n    newPosition[square] = DRAGGED_PIECE;\n    setCurrentPosition(newPosition); // get target square information\n\n    var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset(); // animation complete\n\n    var complete = function () {\n      drawPositionInstant();\n      draggedPieceEl.css('display', 'none'); // execute their onSnapEnd function\n\n      if (cfg.hasOwnProperty('onSnapEnd') === true && typeof cfg.onSnapEnd === 'function') {\n        cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\n      }\n    }; // snap the piece to the target square\n\n\n    var opts = {\n      duration: cfg.snapSpeed,\n      complete: complete\n    };\n    draggedPieceEl.animate(targetSquarePosition, opts); // set state\n\n    DRAGGING_A_PIECE = false;\n  }\n\n  function beginDraggingPiece(source, piece, x, y) {\n    // run their custom onDragStart function\n    // their custom onDragStart function can cancel drag start\n    if (typeof cfg.onDragStart === 'function' && cfg.onDragStart(source, piece, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\n      return;\n    } // set state\n\n\n    DRAGGING_A_PIECE = true;\n    DRAGGED_PIECE = piece;\n    DRAGGED_PIECE_SOURCE = source; // if the piece came from spare pieces, location is offboard\n\n    if (source === 'spare') {\n      DRAGGED_PIECE_LOCATION = 'offboard';\n    } else {\n      DRAGGED_PIECE_LOCATION = source;\n    } // capture the x, y coords of all squares in memory\n\n\n    captureSquareOffsets(); // create the dragged piece\n\n    draggedPieceEl.attr('src', buildPieceImgSrc(piece)).css({\n      display: '',\n      position: 'absolute',\n      left: x - SQUARE_SIZE / 2,\n      top: y - SQUARE_SIZE / 2\n    });\n\n    if (source !== 'spare') {\n      // highlight the source square and hide the piece\n      $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1).find('.' + CSS.piece).css('display', 'none');\n    }\n  }\n\n  function updateDraggedPiece(x, y) {\n    // put the dragged piece over the mouse cursor\n    draggedPieceEl.css({\n      left: x - SQUARE_SIZE / 2,\n      top: y - SQUARE_SIZE / 2\n    }); // get location\n\n    var location = isXYOnSquare(x, y); // do nothing if the location has not changed\n\n    if (location === DRAGGED_PIECE_LOCATION) return; // remove highlight from previous square\n\n    if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\n      $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION]).removeClass(CSS.highlight2);\n    } // add highlight to new square\n\n\n    if (validSquare(location) === true) {\n      $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\n    } // run onDragMove\n\n\n    if (typeof cfg.onDragMove === 'function') {\n      cfg.onDragMove(location, DRAGGED_PIECE_LOCATION, DRAGGED_PIECE_SOURCE, DRAGGED_PIECE, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n    } // update state\n\n\n    DRAGGED_PIECE_LOCATION = location;\n  }\n\n  function stopDraggedPiece(location) {\n    // determine what the action should be\n    var action = 'drop';\n\n    if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\n      action = 'snapback';\n    }\n\n    if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\n      action = 'trash';\n    } // run their onDrop function, which can potentially change the drop action\n\n\n    if (cfg.hasOwnProperty('onDrop') === true && typeof cfg.onDrop === 'function') {\n      var newPosition = deepCopy(CURRENT_POSITION); // source piece is a spare piece and position is off the board\n      //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\n      // position has not changed; do nothing\n      // source piece is a spare piece and position is on the board\n\n      if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\n        // add the piece to the board\n        newPosition[location] = DRAGGED_PIECE;\n      } // source piece was on the board and position is off the board\n\n\n      if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\n        // remove the piece from the board\n        delete newPosition[DRAGGED_PIECE_SOURCE];\n      } // source piece was on the board and position is on the board\n\n\n      if (validSquare(DRAGGED_PIECE_SOURCE) === true && validSquare(location) === true) {\n        // move the piece\n        delete newPosition[DRAGGED_PIECE_SOURCE];\n        newPosition[location] = DRAGGED_PIECE;\n      }\n\n      var oldPosition = deepCopy(CURRENT_POSITION);\n      var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE, newPosition, oldPosition, CURRENT_ORIENTATION);\n\n      if (result === 'snapback' || result === 'trash') {\n        action = result;\n      }\n    } // do it!\n\n\n    if (action === 'snapback') {\n      snapbackDraggedPiece();\n    } else if (action === 'trash') {\n      trashDraggedPiece();\n    } else if (action === 'drop') {\n      dropDraggedPieceOnSquare(location);\n    }\n  } //------------------------------------------------------------------------------\n  // Public Methods\n  //------------------------------------------------------------------------------\n  // clear the board\n\n\n  widget.clear = function (useAnimation) {\n    widget.position({}, useAnimation);\n  }; // remove the widget from the page\n\n\n  widget.destroy = function () {\n    // remove markup\n    containerEl.html('');\n    draggedPieceEl.remove(); // remove event handlers\n\n    containerEl.unbind();\n  }; // shorthand method to get the current FEN\n\n\n  widget.fen = function () {\n    return widget.position('fen');\n  }; // flip orientation\n\n\n  widget.flip = function () {\n    return widget.orientation('flip');\n  };\n  /*\r\n  // TODO: write this, GitHub Issue #5\r\n  widget.highlight = function() {\r\n  \r\n  };\r\n  */\n  // move pieces\n\n\n  widget.move = function () {\n    // no need to throw an error here; just do nothing\n    if (arguments.length === 0) return;\n    var useAnimation = true; // collect the moves into an object\n\n    var moves = {};\n\n    for (var i = 0; i < arguments.length; i++) {\n      // any \"false\" to this function means no animations\n      if (arguments[i] === false) {\n        useAnimation = false;\n        continue;\n      } // skip invalid arguments\n\n\n      if (validMove(arguments[i]) !== true) {\n        error(2826, 'Invalid move passed to the move method.', arguments[i]);\n        continue;\n      }\n\n      var tmp = arguments[i].split('-');\n      moves[tmp[0]] = tmp[1];\n    } // calculate position from moves\n\n\n    var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves); // update the board\n\n    widget.position(newPos, useAnimation); // return the new position object\n\n    return newPos;\n  };\n\n  widget.orientation = function (arg) {\n    // no arguments, return the current orientation\n    if (arguments.length === 0) {\n      return CURRENT_ORIENTATION;\n    } // set to white or black\n\n\n    if (arg === 'white' || arg === 'black') {\n      CURRENT_ORIENTATION = arg;\n      drawBoard();\n      return CURRENT_ORIENTATION;\n    } // flip orientation\n\n\n    if (arg === 'flip') {\n      CURRENT_ORIENTATION = CURRENT_ORIENTATION === 'white' ? 'black' : 'white';\n      drawBoard();\n      return CURRENT_ORIENTATION;\n    }\n\n    error(5482, 'Invalid value passed to the orientation method.', arg);\n  };\n\n  widget.position = function (position, useAnimation) {\n    // no arguments, return the current position\n    if (arguments.length === 0) {\n      return deepCopy(CURRENT_POSITION);\n    } // get position as FEN\n\n\n    if (typeof position === 'string' && position.toLowerCase() === 'fen') {\n      return objToFen(CURRENT_POSITION);\n    } // default for useAnimations is true\n\n\n    if (useAnimation !== false) {\n      useAnimation = true;\n    } // start position\n\n\n    if (typeof position === 'string' && position.toLowerCase() === 'start') {\n      position = deepCopy(START_POSITION);\n    } // convert FEN to position object\n\n\n    if (validFen(position) === true) {\n      position = fenToObj(position);\n    } // validate position object\n\n\n    if (validPositionObject(position) !== true) {\n      error(6482, 'Invalid value passed to the position method.', position);\n      return;\n    }\n\n    if (useAnimation === true) {\n      // start the animations\n      doAnimations(calculateAnimations(CURRENT_POSITION, position), CURRENT_POSITION, position); // set the new position\n\n      setCurrentPosition(position);\n    } // instant update\n    else {\n      setCurrentPosition(position);\n      drawPositionInstant();\n    }\n  };\n\n  widget.resize = function () {\n    // calulate the new square size\n    SQUARE_SIZE = calculateSquareSize(); // set board width\n\n    boardEl.css('width', SQUARE_SIZE * 8 + 'px'); // set drag piece size\n\n    draggedPieceEl.css({\n      height: SQUARE_SIZE,\n      width: SQUARE_SIZE\n    }); // spare pieces\n\n    if (cfg.sparePieces === true) {\n      containerEl.find('.' + CSS.sparePieces).css('paddingLeft', SQUARE_SIZE + BOARD_BORDER_SIZE + 'px');\n    } // redraw the board\n\n\n    drawBoard();\n  }; // set the starting position\n\n\n  widget.start = function (useAnimation) {\n    widget.position('start', useAnimation);\n  }; //------------------------------------------------------------------------------\n  // Browser Events\n  //------------------------------------------------------------------------------\n\n\n  function isTouchDevice() {\n    return 'ontouchstart' in document.documentElement;\n  } // reference: http://www.quirksmode.org/js/detect.html\n\n\n  function isMSIE() {\n    return navigator && navigator.userAgent && navigator.userAgent.search(/MSIE/) !== -1;\n  }\n\n  function stopDefault(e) {\n    e.preventDefault();\n  }\n\n  function mousedownSquare(e) {\n    // do nothing if we're not draggable\n    if (cfg.draggable !== true) return;\n    var square = $(this).attr('data-square'); // no piece on this square\n\n    if (validSquare(square) !== true || CURRENT_POSITION.hasOwnProperty(square) !== true) {\n      return;\n    }\n\n    beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\n  }\n\n  function touchstartSquare(e) {\n    // do nothing if we're not draggable\n    if (cfg.draggable !== true) return;\n    var square = $(this).attr('data-square'); // no piece on this square\n\n    if (validSquare(square) !== true || CURRENT_POSITION.hasOwnProperty(square) !== true) {\n      return;\n    }\n\n    e = e.originalEvent;\n    beginDraggingPiece(square, CURRENT_POSITION[square], e.changedTouches[0].pageX, e.changedTouches[0].pageY);\n  }\n\n  function mousedownSparePiece(e) {\n    // do nothing if sparePieces is not enabled\n    if (cfg.sparePieces !== true) return;\n    var piece = $(this).attr('data-piece');\n    beginDraggingPiece('spare', piece, e.pageX, e.pageY);\n  }\n\n  function touchstartSparePiece(e) {\n    // do nothing if sparePieces is not enabled\n    if (cfg.sparePieces !== true) return;\n    var piece = $(this).attr('data-piece');\n    e = e.originalEvent;\n    beginDraggingPiece('spare', piece, e.changedTouches[0].pageX, e.changedTouches[0].pageY);\n  }\n\n  function mousemoveWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return;\n    updateDraggedPiece(e.pageX, e.pageY);\n  }\n\n  function touchmoveWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return; // prevent screen from scrolling\n\n    e.preventDefault();\n    updateDraggedPiece(e.originalEvent.changedTouches[0].pageX, e.originalEvent.changedTouches[0].pageY);\n  }\n\n  function mouseupWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return; // get the location\n\n    var location = isXYOnSquare(e.pageX, e.pageY);\n    stopDraggedPiece(location);\n  }\n\n  function touchendWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return; // get the location\n\n    var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX, e.originalEvent.changedTouches[0].pageY);\n    stopDraggedPiece(location);\n  }\n\n  function mouseenterSquare(e) {\n    // do not fire this event if we are dragging a piece\n    // NOTE: this should never happen, but it's a safeguard\n    if (DRAGGING_A_PIECE !== false) return;\n    if (cfg.hasOwnProperty('onMouseoverSquare') !== true || typeof cfg.onMouseoverSquare !== 'function') return; // get the square\n\n    var square = $(e.currentTarget).attr('data-square'); // NOTE: this should never happen; defensive\n\n    if (validSquare(square) !== true) return; // get the piece on this square\n\n    var piece = false;\n\n    if (CURRENT_POSITION.hasOwnProperty(square) === true) {\n      piece = CURRENT_POSITION[square];\n    } // execute their function\n\n\n    cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n  }\n\n  function mouseleaveSquare(e) {\n    // do not fire this event if we are dragging a piece\n    // NOTE: this should never happen, but it's a safeguard\n    if (DRAGGING_A_PIECE !== false) return;\n    if (cfg.hasOwnProperty('onMouseoutSquare') !== true || typeof cfg.onMouseoutSquare !== 'function') return; // get the square\n\n    var square = $(e.currentTarget).attr('data-square'); // NOTE: this should never happen; defensive\n\n    if (validSquare(square) !== true) return; // get the piece on this square\n\n    var piece = false;\n\n    if (CURRENT_POSITION.hasOwnProperty(square) === true) {\n      piece = CURRENT_POSITION[square];\n    } // execute their function\n\n\n    cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n  } //------------------------------------------------------------------------------\n  // Initialization\n  //------------------------------------------------------------------------------\n\n\n  function addEvents() {\n    // prevent browser \"image drag\"\n    $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault); // mouse drag pieces\n\n    boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\n    containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece, mousedownSparePiece); // mouse enter / leave square\n\n    boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare).on('mouseleave', '.' + CSS.square, mouseleaveSquare); // IE doesn't like the events on the window object, but other browsers\n    // perform better that way\n\n    if (isMSIE() === true) {\n      // IE-specific prevent browser \"image drag\"\n      document.ondragstart = function () {\n        return false;\n      };\n\n      $('body').on('mousemove', mousemoveWindow).on('mouseup', mouseupWindow);\n    } else {\n      $(window).on('mousemove', mousemoveWindow).on('mouseup', mouseupWindow);\n    } // touch drag pieces\n\n\n    if (isTouchDevice() === true) {\n      boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\n      containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece, touchstartSparePiece);\n      $(window).on('touchmove', touchmoveWindow).on('touchend', touchendWindow);\n    }\n  }\n\n  function initDom() {\n    // create unique IDs for all the elements we will create\n    createElIds(); // build board and save it in memory\n\n    containerEl.html(buildBoardContainer());\n    boardEl = containerEl.find('.' + CSS.board);\n\n    if (cfg.sparePieces === true) {\n      sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\n      sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\n    } // create the drag piece\n\n\n    var draggedPieceId = uuid();\n    $('body').append(buildPiece('wP', true, draggedPieceId));\n    draggedPieceEl = $('#' + draggedPieceId); // get the border size\n\n    BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10); // set the size and draw the board\n\n    widget.resize();\n  }\n\n  function init() {\n    if (checkDeps() !== true || expandConfig() !== true) return;\n    initDom();\n    addEvents();\n  } // go time\n\n\n  init(); // return the widget object\n\n  return widget;\n}; // end window.ChessBoard\n// expose util functions\n\n\nChessBoard.fenToObj = fenToObj;\nChessBoard.objToFen = objToFen;\nmodule.exports = ChessBoard;","map":{"version":3,"sources":["/Users/uayevan/Desktop/ChessApp/client/node_modules/chessboardjs/www/js/chessboard.js"],"names":["COLUMNS","split","validMove","move","tmp","length","validSquare","square","search","validPieceCode","code","validFen","fen","replace","chunks","i","validPositionObject","pos","hasOwnProperty","fenToPieceCode","piece","toLowerCase","toUpperCase","pieceCodeToFen","fenToObj","rows","position","currentRow","row","colIndex","j","emptySquares","parseInt","objToFen","obj","ChessBoard","containerElOrId","cfg","MINIMUM_JQUERY_VERSION","START_FEN","START_POSITION","CSS","alpha","black","board","chessboard","clearfix","highlight1","highlight2","notation","numeric","sparePieces","sparePiecesBottom","sparePiecesTop","white","containerEl","boardEl","draggedPieceEl","sparePiecesTopEl","sparePiecesBottomEl","widget","ANIMATION_HAPPENING","BOARD_BORDER_SIZE","CURRENT_ORIENTATION","CURRENT_POSITION","SQUARE_SIZE","DRAGGED_PIECE","DRAGGED_PIECE_LOCATION","DRAGGED_PIECE_SOURCE","DRAGGING_A_PIECE","SPARE_PIECE_ELS_IDS","SQUARE_ELS_IDS","SQUARE_ELS_OFFSETS","uuid","c","r","Math","random","toString","deepCopy","thing","JSON","parse","stringify","parseSemVer","version","major","minor","patch","compareSemVer","minimum","versionNum","minimumNum","error","msg","showErrors","errorText","console","log","arguments","window","alert","checkDeps","el","document","getElementById","$","fn","jquery","validAnimationSpeed","speed","expandConfig","orientation","showNotation","draggable","dropOffBoard","pieceTheme","appearSpeed","moveSpeed","snapbackSpeed","snapSpeed","trashSpeed","calculateSquareSize","containerWidth","width","boardWidth","createElIds","pieces","whitePiece","blackPiece","buildBoardContainer","html","buildBoard","reverse","squareColor","buildPieceImgSrc","buildPiece","hidden","id","buildSparePieces","color","animateSquareToSquare","src","dest","completeFn","srcSquareEl","srcSquarePosition","offset","destSquareEl","destSquarePosition","animatedPieceId","append","animatedPieceEl","css","display","top","left","find","remove","complete","opts","duration","animate","animateSparePieceToSquare","srcOffset","destOffset","pieceId","doAnimations","a","oldPos","newPos","numFinished","onFinish","drawPositionInstant","onMoveEnd","type","fadeOut","fadeIn","source","destination","squareDistance","s1","s2","s1x","indexOf","s1y","s2x","s2y","xDelta","abs","yDelta","createRadius","squares","s","push","distance","sort","b","squares2","findClosestPiece","closestSquares","calculateAnimations","pos1","pos2","animations","squaresMovedTo","closestPiece","drawBoard","calculatePositionFromMoves","moves","setCurrentPosition","oldFen","newFen","onChange","isXYOnSquare","x","y","captureSquareOffsets","removeSquareHighlights","removeClass","snapbackDraggedPiece","trashDraggedPiece","onSnapbackEnd","sourceSquarePosition","newPosition","dropDraggedPieceOnSquare","targetSquarePosition","onSnapEnd","beginDraggingPiece","onDragStart","attr","addClass","updateDraggedPiece","location","onDragMove","stopDraggedPiece","action","onDrop","oldPosition","result","clear","useAnimation","destroy","unbind","flip","arg","resize","height","start","isTouchDevice","documentElement","isMSIE","navigator","userAgent","stopDefault","e","preventDefault","mousedownSquare","pageX","pageY","touchstartSquare","originalEvent","changedTouches","mousedownSparePiece","touchstartSparePiece","mousemoveWindow","touchmoveWindow","mouseupWindow","touchendWindow","mouseenterSquare","onMouseoverSquare","currentTarget","mouseleaveSquare","onMouseoutSquare","addEvents","on","ondragstart","initDom","draggedPieceId","init","module","exports"],"mappings":"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","sourcesContent":["/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\r\n\r\n//------------------------------------------------------------------------------\r\n// Chess Util Functions\r\n//------------------------------------------------------------------------------\r\nvar COLUMNS = 'abcdefgh'.split('');\r\n\r\nfunction validMove(move) {\r\n  // move should be a string\r\n  if (typeof move !== 'string') return false;\r\n\r\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n  var tmp = move.split('-');\r\n  if (tmp.length !== 2) return false;\r\n\r\n  return (validSquare(tmp[0]) === true && validSquare(tmp[1]) === true);\r\n}\r\n\r\nfunction validSquare(square) {\r\n  if (typeof square !== 'string') return false;\r\n  return (square.search(/^[a-h][1-8]$/) !== -1);\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  if (typeof code !== 'string') return false;\r\n  return (code.search(/^[bw][KQRNBP]$/) !== -1);\r\n}\r\n\r\n// TODO: this whole function could probably be replaced with a single regex\r\nfunction validFen(fen) {\r\n  if (typeof fen !== 'string') return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check the piece sections\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i] === '' ||\r\n        chunks[i].length > 8 ||\r\n        chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validPositionObject(pos) {\r\n  if (typeof pos !== 'object') return false;\r\n\r\n  for (var i in pos) {\r\n    if (pos.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  var tmp = piece.split('');\r\n\r\n  // white piece\r\n  if (tmp[0] === 'w') {\r\n    return tmp[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return tmp[1].toLowerCase();\r\n}\r\n\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nfunction fenToObj(fen) {\r\n  if (validFen(fen) !== true) {\r\n    return false;\r\n  }\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  var rows = fen.split('/');\r\n  var position = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split('');\r\n    var colIndex = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var emptySquares = parseInt(row[j], 10);\r\n        colIndex += emptySquares;\r\n      }\r\n      // piece\r\n      else {\r\n        var square = COLUMNS[colIndex] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIndex++;\r\n      }\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nfunction objToFen(obj) {\r\n  if (validPositionObject(obj) !== true) {\r\n    return false;\r\n  }\r\n\r\n  var fen = '';\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square) === true) {\r\n        fen += pieceCodeToFen(obj[square]);\r\n      }\r\n\r\n      // empty space\r\n      else {\r\n        fen += '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen += '/';\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  // squeeze the numbers together\r\n  // haha, I love this solution...\r\n  fen = fen.replace(/11111111/g, '8');\r\n  fen = fen.replace(/1111111/g, '7');\r\n  fen = fen.replace(/111111/g, '6');\r\n  fen = fen.replace(/11111/g, '5');\r\n  fen = fen.replace(/1111/g, '4');\r\n  fen = fen.replace(/111/g, '3');\r\n  fen = fen.replace(/11/g, '2');\r\n\r\n  return fen;\r\n}\r\n\r\nvar ChessBoard = function (containerElOrId, cfg) {\r\n\r\ncfg = cfg || {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nvar MINIMUM_JQUERY_VERSION = '1.7.0',\r\n  START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\r\n  START_POSITION = fenToObj(START_FEN);\r\n\r\n// use unique class names to prevent clashing with anything else on the page\r\n// and simplify selectors\r\n// NOTE: these should never change\r\nvar CSS = {\r\n  alpha: 'alpha-d2270',\r\n  black: 'black-3c85d',\r\n  board: 'board-b72b1',\r\n  chessboard: 'chessboard-63f37',\r\n  clearfix: 'clearfix-7da63',\r\n  highlight1: 'highlight1-32417',\r\n  highlight2: 'highlight2-9c5d2',\r\n  notation: 'notation-322f9',\r\n  numeric: 'numeric-fc462',\r\n  piece: 'piece-417db',\r\n  row: 'row-5277c',\r\n  sparePieces: 'spare-pieces-7492f',\r\n  sparePiecesBottom: 'spare-pieces-bottom-ae20f',\r\n  sparePiecesTop: 'spare-pieces-top-4028b',\r\n  square: 'square-55d63',\r\n  white: 'white-1e1d7'\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Module Scope Variables\r\n//------------------------------------------------------------------------------\r\n\r\n// DOM elements\r\nvar containerEl,\r\n  boardEl,\r\n  draggedPieceEl,\r\n  sparePiecesTopEl,\r\n  sparePiecesBottomEl;\r\n\r\n// constructor return object\r\nvar widget = {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Stateful\r\n//------------------------------------------------------------------------------\r\n\r\nvar ANIMATION_HAPPENING = false,\r\n  BOARD_BORDER_SIZE = 2,\r\n  CURRENT_ORIENTATION = 'white',\r\n  CURRENT_POSITION = {},\r\n  SQUARE_SIZE,\r\n  DRAGGED_PIECE,\r\n  DRAGGED_PIECE_LOCATION,\r\n  DRAGGED_PIECE_SOURCE,\r\n  DRAGGING_A_PIECE = false,\r\n  SPARE_PIECE_ELS_IDS = {},\r\n  SQUARE_ELS_IDS = {},\r\n  SQUARE_ELS_OFFSETS;\r\n\r\n//------------------------------------------------------------------------------\r\n// JS Util Functions\r\n//------------------------------------------------------------------------------\r\n\r\n// http://tinyurl.com/3ttloxj\r\nfunction uuid() {\r\n  return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function(c) {\r\n    var r = Math.random() * 16 | 0;\r\n    return r.toString(16);\r\n  });\r\n}\r\n\r\nfunction deepCopy(thing) {\r\n  return JSON.parse(JSON.stringify(thing));\r\n}\r\n\r\nfunction parseSemVer(version) {\r\n  var tmp = version.split('.');\r\n  return {\r\n    major: parseInt(tmp[0], 10),\r\n    minor: parseInt(tmp[1], 10),\r\n    patch: parseInt(tmp[2], 10)\r\n  };\r\n}\r\n\r\n// returns true if version is >= minimum\r\nfunction compareSemVer(version, minimum) {\r\n  version = parseSemVer(version);\r\n  minimum = parseSemVer(minimum);\r\n\r\n  var versionNum = (version.major * 10000 * 10000) +\r\n    (version.minor * 10000) + version.patch;\r\n  var minimumNum = (minimum.major * 10000 * 10000) +\r\n    (minimum.minor * 10000) + minimum.patch;\r\n\r\n  return (versionNum >= minimumNum);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Validation / Errors\r\n//------------------------------------------------------------------------------\r\n\r\nfunction error(code, msg, obj) {\r\n  // do nothing if showErrors is not set\r\n  if (cfg.hasOwnProperty('showErrors') !== true ||\r\n      cfg.showErrors === false) {\r\n    return;\r\n  }\r\n\r\n  var errorText = 'ChessBoard Error ' + code + ': ' + msg;\r\n\r\n  // print to console\r\n  if (cfg.showErrors === 'console' &&\r\n      typeof console === 'object' &&\r\n      typeof console.log === 'function') {\r\n    console.log(errorText);\r\n    if (arguments.length >= 2) {\r\n      console.log(obj);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // alert errors\r\n  if (cfg.showErrors === 'alert') {\r\n    if (obj) {\r\n      errorText += '\\n\\n' + JSON.stringify(obj);\r\n    }\r\n    window.alert(errorText);\r\n    return;\r\n  }\r\n\r\n  // custom function\r\n  if (typeof cfg.showErrors === 'function') {\r\n    cfg.showErrors(code, msg, obj);\r\n  }\r\n}\r\n\r\n// check dependencies\r\nfunction checkDeps() {\r\n  // if containerId is a string, it must be the ID of a DOM node\r\n  if (typeof containerElOrId === 'string') {\r\n    // cannot be empty\r\n    if (containerElOrId === '') {\r\n      window.alert('ChessBoard Error 1001: ' +\r\n        'The first argument to ChessBoard() cannot be an empty string.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // make sure the container element exists in the DOM\r\n    var el = document.getElementById(containerElOrId);\r\n    if (! el) {\r\n      window.alert('ChessBoard Error 1002: Element with id \"' +\r\n        containerElOrId + '\" does not exist in the DOM.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // set the containerEl\r\n    containerEl = $(el);\r\n  }\r\n\r\n  // else it must be something that becomes a jQuery collection\r\n  // with size 1\r\n  // ie: a single DOM node or jQuery object\r\n  else {\r\n    containerEl = $(containerElOrId);\r\n\r\n    if (containerEl.length !== 1) {\r\n      window.alert('ChessBoard Error 1003: The first argument to ' +\r\n        'ChessBoard() must be an ID or a single DOM node.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // JSON must exist\r\n  if (! window.JSON ||\r\n      typeof JSON.stringify !== 'function' ||\r\n      typeof JSON.parse !== 'function') {\r\n    window.alert('ChessBoard Error 1004: JSON does not exist. ' +\r\n      'Please include a JSON polyfill.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  // check for a compatible version of jQuery\r\n  if (! (typeof window.$ && $.fn && $.fn.jquery &&\r\n      compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\r\n    window.alert('ChessBoard Error 1005: Unable to find a valid version ' +\r\n      'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' +\r\n      'higher on the page.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validAnimationSpeed(speed) {\r\n  if (speed === 'fast' || speed === 'slow') {\r\n    return true;\r\n  }\r\n\r\n  if ((parseInt(speed, 10) + '') !== (speed + '')) {\r\n    return false;\r\n  }\r\n\r\n  return (speed >= 0);\r\n}\r\n\r\n// validate config / set default options\r\nfunction expandConfig() {\r\n  if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\r\n    cfg = {\r\n      position: cfg\r\n    };\r\n  }\r\n\r\n  // default for orientation is white\r\n  if (cfg.orientation !== 'black') {\r\n    cfg.orientation = 'white';\r\n  }\r\n  CURRENT_ORIENTATION = cfg.orientation;\r\n\r\n  // default for showNotation is true\r\n  if (cfg.showNotation !== false) {\r\n    cfg.showNotation = true;\r\n  }\r\n\r\n  // default for draggable is false\r\n  if (cfg.draggable !== true) {\r\n    cfg.draggable = false;\r\n  }\r\n\r\n  // default for dropOffBoard is 'snapback'\r\n  if (cfg.dropOffBoard !== 'trash') {\r\n    cfg.dropOffBoard = 'snapback';\r\n  }\r\n\r\n  // default for sparePieces is false\r\n  if (cfg.sparePieces !== true) {\r\n    cfg.sparePieces = false;\r\n  }\r\n\r\n  // draggable must be true if sparePieces is enabled\r\n  if (cfg.sparePieces === true) {\r\n    cfg.draggable = true;\r\n  }\r\n\r\n  // default piece theme is wikipedia\r\n  if (cfg.hasOwnProperty('pieceTheme') !== true ||\r\n      (typeof cfg.pieceTheme !== 'string' &&\r\n       typeof cfg.pieceTheme !== 'function')) {\r\n    cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\r\n  }\r\n\r\n  // animation speeds\r\n  if (cfg.hasOwnProperty('appearSpeed') !== true ||\r\n      validAnimationSpeed(cfg.appearSpeed) !== true) {\r\n    cfg.appearSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('moveSpeed') !== true ||\r\n      validAnimationSpeed(cfg.moveSpeed) !== true) {\r\n    cfg.moveSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('snapbackSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapbackSpeed) !== true) {\r\n    cfg.snapbackSpeed = 50;\r\n  }\r\n  if (cfg.hasOwnProperty('snapSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapSpeed) !== true) {\r\n    cfg.snapSpeed = 25;\r\n  }\r\n  if (cfg.hasOwnProperty('trashSpeed') !== true ||\r\n      validAnimationSpeed(cfg.trashSpeed) !== true) {\r\n    cfg.trashSpeed = 100;\r\n  }\r\n\r\n  // make sure position is valid\r\n  if (cfg.hasOwnProperty('position') === true) {\r\n    if (cfg.position === 'start') {\r\n      CURRENT_POSITION = deepCopy(START_POSITION);\r\n    }\r\n\r\n    else if (validFen(cfg.position) === true) {\r\n      CURRENT_POSITION = fenToObj(cfg.position);\r\n    }\r\n\r\n    else if (validPositionObject(cfg.position) === true) {\r\n      CURRENT_POSITION = deepCopy(cfg.position);\r\n    }\r\n\r\n    else {\r\n      error(7263, 'Invalid value passed to config.position.', cfg.position);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// DOM Misc\r\n//------------------------------------------------------------------------------\r\n\r\n// calculates square size based on the width of the container\r\n// got a little CSS black magic here, so let me explain:\r\n// get the width of the container element (could be anything), reduce by 1 for\r\n// fudge factor, and then keep reducing until we find an exact mod 8 for\r\n// our square size\r\nfunction calculateSquareSize() {\r\n  var containerWidth = parseInt(containerEl.width(), 10);\r\n\r\n  // defensive, prevent infinite loop\r\n  if (! containerWidth || containerWidth <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  // pad one pixel\r\n  var boardWidth = containerWidth - 1;\r\n\r\n  while (boardWidth % 8 !== 0 && boardWidth > 0) {\r\n    boardWidth--;\r\n  }\r\n\r\n  return (boardWidth / 8);\r\n}\r\n\r\n// create random IDs for elements\r\nfunction createElIds() {\r\n  // squares on the board\r\n  for (var i = 0; i < COLUMNS.length; i++) {\r\n    for (var j = 1; j <= 8; j++) {\r\n      var square = COLUMNS[i] + j;\r\n      SQUARE_ELS_IDS[square] = square + '-' + uuid();\r\n    }\r\n  }\r\n\r\n  // spare pieces\r\n  var pieces = 'KQRBNP'.split('');\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    var whitePiece = 'w' + pieces[i];\r\n    var blackPiece = 'b' + pieces[i];\r\n    SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\r\n    SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Markup Building\r\n//------------------------------------------------------------------------------\r\n\r\nfunction buildBoardContainer() {\r\n  var html = '<div class=\"' + CSS.chessboard + '\">';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesTop + '\"></div>';\r\n  }\r\n\r\n  html += '<div class=\"' + CSS.board + '\"></div>';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesBottom + '\"></div>';\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n}\r\n\r\n/*\r\nvar buildSquare = function(color, size, id) {\r\n  var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n  'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n  'id=\"' + id + '\">';\r\n\r\n  if (cfg.showNotation === true) {\r\n\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n};\r\n*/\r\n\r\nfunction buildBoard(orientation) {\r\n  if (orientation !== 'black') {\r\n    orientation = 'white';\r\n  }\r\n\r\n  var html = '';\r\n\r\n  // algebraic notation / orientation\r\n  var alpha = deepCopy(COLUMNS);\r\n  var row = 8;\r\n  if (orientation === 'black') {\r\n    alpha.reverse();\r\n    row = 1;\r\n  }\r\n\r\n  var squareColor = 'white';\r\n  for (var i = 0; i < 8; i++) {\r\n    html += '<div class=\"' + CSS.row + '\">';\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = alpha[j] + row;\r\n\r\n      html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' +\r\n        'square-' + square + '\" ' +\r\n        'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' +\r\n        'id=\"' + SQUARE_ELS_IDS[square] + '\" ' +\r\n        'data-square=\"' + square + '\">';\r\n\r\n      if (cfg.showNotation === true) {\r\n        // alpha notation\r\n        if ((orientation === 'white' && row === 1) ||\r\n            (orientation === 'black' && row === 8)) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' +\r\n            alpha[j] + '</div>';\r\n        }\r\n\r\n        // numeric notation\r\n        if (j === 0) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' +\r\n            row + '</div>';\r\n        }\r\n      }\r\n\r\n      html += '</div>'; // end .square\r\n\r\n      squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n    }\r\n    html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\r\n\r\n    squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n\r\n    if (orientation === 'white') {\r\n      row--;\r\n    }\r\n    else {\r\n      row++;\r\n    }\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildPieceImgSrc(piece) {\r\n  if (typeof cfg.pieceTheme === 'function') {\r\n    return cfg.pieceTheme(piece);\r\n  }\r\n\r\n  if (typeof cfg.pieceTheme === 'string') {\r\n    return cfg.pieceTheme.replace(/{piece}/g, piece);\r\n  }\r\n\r\n  // NOTE: this should never happen\r\n  error(8272, 'Unable to build image source for cfg.pieceTheme.');\r\n  return '';\r\n}\r\n\r\nfunction buildPiece(piece, hidden, id) {\r\n  var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\r\n  if (id && typeof id === 'string') {\r\n    html += 'id=\"' + id + '\" ';\r\n  }\r\n  html += 'alt=\"\" ' +\r\n  'class=\"' + CSS.piece + '\" ' +\r\n  'data-piece=\"' + piece + '\" ' +\r\n  'style=\"width: ' + SQUARE_SIZE + 'px;' +\r\n  'height: ' + SQUARE_SIZE + 'px;';\r\n  if (hidden === true) {\r\n    html += 'display:none;';\r\n  }\r\n  html += '\" />';\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildSparePieces(color) {\r\n  var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\r\n  if (color === 'black') {\r\n    pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\r\n  }\r\n\r\n  var html = '';\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Animations\r\n//------------------------------------------------------------------------------\r\n\r\nfunction animateSquareToSquare(src, dest, piece, completeFn) {\r\n  // get information about the source and destination squares\r\n  var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\r\n  var srcSquarePosition = srcSquareEl.offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destSquarePosition = destSquareEl.offset();\r\n\r\n  // create the animated piece and absolutely position it\r\n  // over the source square\r\n  var animatedPieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, animatedPieceId));\r\n  var animatedPieceEl = $('#' + animatedPieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    top: srcSquarePosition.top,\r\n    left: srcSquarePosition.left\r\n  });\r\n\r\n  // remove original piece from source square\r\n  srcSquareEl.find('.' + CSS.piece).remove();\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destSquarePosition, opts);\r\n}\r\n\r\nfunction animateSparePieceToSquare(piece, dest, completeFn) {\r\n  var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destOffset = destSquareEl.offset();\r\n\r\n  // create the animate piece\r\n  var pieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, pieceId));\r\n  var animatedPieceEl = $('#' + pieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    left: srcOffset.left,\r\n    top: srcOffset.top\r\n  });\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.find('.' + CSS.piece).remove();\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destOffset, opts);\r\n}\r\n\r\n// execute an array of animations\r\nfunction doAnimations(a, oldPos, newPos) {\r\n  if (a.length === 0) {\r\n    return;\r\n  }\r\n\r\n  ANIMATION_HAPPENING = true;\r\n\r\n  var numFinished = 0;\r\n  function onFinish() {\r\n    numFinished++;\r\n\r\n    // exit if all the animations aren't finished\r\n    if (numFinished !== a.length) return;\r\n\r\n    drawPositionInstant();\r\n    ANIMATION_HAPPENING = false;\r\n\r\n    // run their onMoveEnd function\r\n    if (cfg.hasOwnProperty('onMoveEnd') === true &&\r\n      typeof cfg.onMoveEnd === 'function') {\r\n      cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    // clear a piece\r\n    if (a[i].type === 'clear') {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece)\r\n        .fadeOut(cfg.trashSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece (no spare pieces)\r\n    if (a[i].type === 'add' && cfg.sparePieces !== true) {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square])\r\n        .append(buildPiece(a[i].piece, true))\r\n        .find('.' + CSS.piece)\r\n        .fadeIn(cfg.appearSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece from a spare piece\r\n    if (a[i].type === 'add' && cfg.sparePieces === true) {\r\n      animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\r\n    }\r\n\r\n    // move a piece\r\n    if (a[i].type === 'move') {\r\n      animateSquareToSquare(a[i].source, a[i].destination, a[i].piece,\r\n        onFinish);\r\n    }\r\n  }\r\n}\r\n\r\n// returns the distance between two squares\r\nfunction squareDistance(s1, s2) {\r\n  s1 = s1.split('');\r\n  var s1x = COLUMNS.indexOf(s1[0]) + 1;\r\n  var s1y = parseInt(s1[1], 10);\r\n\r\n  s2 = s2.split('');\r\n  var s2x = COLUMNS.indexOf(s2[0]) + 1;\r\n  var s2y = parseInt(s2[1], 10);\r\n\r\n  var xDelta = Math.abs(s1x - s2x);\r\n  var yDelta = Math.abs(s1y - s2y);\r\n\r\n  if (xDelta >= yDelta) return xDelta;\r\n  return yDelta;\r\n}\r\n\r\n// returns an array of closest squares from square\r\nfunction createRadius(square) {\r\n  var squares = [];\r\n\r\n  // calculate distance of all squares\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var s = COLUMNS[i] + (j + 1);\r\n\r\n      // skip the square we're starting from\r\n      if (square === s) continue;\r\n\r\n      squares.push({\r\n        square: s,\r\n        distance: squareDistance(square, s)\r\n      });\r\n    }\r\n  }\r\n\r\n  // sort by distance\r\n  squares.sort(function(a, b) {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  // just return the square code\r\n  var squares2 = [];\r\n  for (var i = 0; i < squares.length; i++) {\r\n    squares2.push(squares[i].square);\r\n  }\r\n\r\n  return squares2;\r\n}\r\n\r\n// returns the square of the closest instance of piece\r\n// returns false if no instance of piece is found in position\r\nfunction findClosestPiece(position, piece, square) {\r\n  // create array of closest squares from square\r\n  var closestSquares = createRadius(square);\r\n\r\n  // search through the position in order of distance for the piece\r\n  for (var i = 0; i < closestSquares.length; i++) {\r\n    var s = closestSquares[i];\r\n\r\n    if (position.hasOwnProperty(s) === true && position[s] === piece) {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// calculate an array of animations that need to happen in order to get\r\n// from pos1 to pos2\r\nfunction calculateAnimations(pos1, pos2) {\r\n  // make copies of both\r\n  pos1 = deepCopy(pos1);\r\n  pos2 = deepCopy(pos2);\r\n\r\n  var animations = [];\r\n  var squaresMovedTo = {};\r\n\r\n  // remove pieces that are the same in both positions\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\r\n      delete pos1[i];\r\n      delete pos2[i];\r\n    }\r\n  }\r\n\r\n  // find all the \"move\" animations\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    var closestPiece = findClosestPiece(pos1, pos2[i], i);\r\n    if (closestPiece !== false) {\r\n      animations.push({\r\n        type: 'move',\r\n        source: closestPiece,\r\n        destination: i,\r\n        piece: pos2[i]\r\n      });\r\n\r\n      delete pos1[closestPiece];\r\n      delete pos2[i];\r\n      squaresMovedTo[i] = true;\r\n    }\r\n  }\r\n\r\n  // add pieces to pos2\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    animations.push({\r\n      type: 'add',\r\n      square: i,\r\n      piece: pos2[i]\r\n    })\r\n\r\n    delete pos2[i];\r\n  }\r\n\r\n  // clear pieces from pos1\r\n  for (var i in pos1) {\r\n    if (pos1.hasOwnProperty(i) !== true) continue;\r\n\r\n    // do not clear a piece if it is on a square that is the result\r\n    // of a \"move\", ie: a piece capture\r\n    if (squaresMovedTo.hasOwnProperty(i) === true) continue;\r\n\r\n    animations.push({\r\n      type: 'clear',\r\n      square: i,\r\n      piece: pos1[i]\r\n    });\r\n\r\n    delete pos1[i];\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Control Flow\r\n//------------------------------------------------------------------------------\r\n\r\nfunction drawPositionInstant() {\r\n  // clear the board\r\n  boardEl.find('.' + CSS.piece).remove();\r\n\r\n  // add the pieces\r\n  for (var i in CURRENT_POSITION) {\r\n    if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\r\n\r\n    $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\r\n  }\r\n}\r\n\r\nfunction drawBoard() {\r\n  boardEl.html(buildBoard(CURRENT_ORIENTATION));\r\n  drawPositionInstant();\r\n\r\n  if (cfg.sparePieces === true) {\r\n    if (CURRENT_ORIENTATION === 'white') {\r\n      sparePiecesTopEl.html(buildSparePieces('black'));\r\n      sparePiecesBottomEl.html(buildSparePieces('white'));\r\n    }\r\n    else {\r\n      sparePiecesTopEl.html(buildSparePieces('white'));\r\n      sparePiecesBottomEl.html(buildSparePieces('black'));\r\n    }\r\n  }\r\n}\r\n\r\n// given a position and a set of moves, return a new position\r\n// with the moves executed\r\nfunction calculatePositionFromMoves(position, moves) {\r\n  position = deepCopy(position);\r\n\r\n  for (var i in moves) {\r\n    if (moves.hasOwnProperty(i) !== true) continue;\r\n\r\n    // skip the move if the position doesn't have a piece on the source square\r\n    if (position.hasOwnProperty(i) !== true) continue;\r\n\r\n    var piece = position[i];\r\n    delete position[i];\r\n    position[moves[i]] = piece;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction setCurrentPosition(position) {\r\n  var oldPos = deepCopy(CURRENT_POSITION);\r\n  var newPos = deepCopy(position);\r\n  var oldFen = objToFen(oldPos);\r\n  var newFen = objToFen(newPos);\r\n\r\n  // do nothing if no change in position\r\n  if (oldFen === newFen) return;\r\n\r\n  // run their onChange function\r\n  if (cfg.hasOwnProperty('onChange') === true &&\r\n    typeof cfg.onChange === 'function') {\r\n    cfg.onChange(oldPos, newPos);\r\n  }\r\n\r\n  // update state\r\n  CURRENT_POSITION = position;\r\n}\r\n\r\nfunction isXYOnSquare(x, y) {\r\n  for (var i in SQUARE_ELS_OFFSETS) {\r\n    if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\r\n\r\n    var s = SQUARE_ELS_OFFSETS[i];\r\n    if (x >= s.left && x < s.left + SQUARE_SIZE &&\r\n        y >= s.top && y < s.top + SQUARE_SIZE) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 'offboard';\r\n}\r\n\r\n// records the XY coords of every square into memory\r\nfunction captureSquareOffsets() {\r\n  SQUARE_ELS_OFFSETS = {};\r\n\r\n  for (var i in SQUARE_ELS_IDS) {\r\n    if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\r\n\r\n    SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\r\n  }\r\n}\r\n\r\nfunction removeSquareHighlights() {\r\n  boardEl.find('.' + CSS.square)\r\n    .removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\r\n}\r\n\r\nfunction snapbackDraggedPiece() {\r\n  // there is no \"snapback\" for spare pieces\r\n  if (DRAGGED_PIECE_SOURCE === 'spare') {\r\n    trashDraggedPiece();\r\n    return;\r\n  }\r\n\r\n  removeSquareHighlights();\r\n\r\n  // animation complete\r\n  function complete() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // run their onSnapbackEnd function\r\n    if (cfg.hasOwnProperty('onSnapbackEnd') === true &&\r\n      typeof cfg.onSnapbackEnd === 'function') {\r\n      cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n    }\r\n  }\r\n\r\n  // get source square position\r\n  var sourceSquarePosition =\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\r\n\r\n  // animate the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapbackSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(sourceSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction trashDraggedPiece() {\r\n  removeSquareHighlights();\r\n\r\n  // remove the source piece\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  setCurrentPosition(newPosition);\r\n\r\n  // redraw the position\r\n  drawPositionInstant();\r\n\r\n  // hide the dragged piece\r\n  draggedPieceEl.fadeOut(cfg.trashSpeed);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction dropDraggedPieceOnSquare(square) {\r\n  removeSquareHighlights();\r\n\r\n  // update position\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  newPosition[square] = DRAGGED_PIECE;\r\n  setCurrentPosition(newPosition);\r\n\r\n  // get target square information\r\n  var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\r\n\r\n  // animation complete\r\n  var complete = function() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // execute their onSnapEnd function\r\n    if (cfg.hasOwnProperty('onSnapEnd') === true &&\r\n      typeof cfg.onSnapEnd === 'function') {\r\n      cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\r\n    }\r\n  };\r\n\r\n  // snap the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(targetSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction beginDraggingPiece(source, piece, x, y) {\r\n  // run their custom onDragStart function\r\n  // their custom onDragStart function can cancel drag start\r\n  if (typeof cfg.onDragStart === 'function' &&\r\n      cfg.onDragStart(source, piece,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\r\n    return;\r\n  }\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = true;\r\n  DRAGGED_PIECE = piece;\r\n  DRAGGED_PIECE_SOURCE = source;\r\n\r\n  // if the piece came from spare pieces, location is offboard\r\n  if (source === 'spare') {\r\n    DRAGGED_PIECE_LOCATION = 'offboard';\r\n  }\r\n  else {\r\n    DRAGGED_PIECE_LOCATION = source;\r\n  }\r\n\r\n  // capture the x, y coords of all squares in memory\r\n  captureSquareOffsets();\r\n\r\n  // create the dragged piece\r\n  draggedPieceEl.attr('src', buildPieceImgSrc(piece))\r\n    .css({\r\n      display: '',\r\n      position: 'absolute',\r\n      left: x - (SQUARE_SIZE / 2),\r\n      top: y - (SQUARE_SIZE / 2)\r\n    });\r\n\r\n  if (source !== 'spare') {\r\n    // highlight the source square and hide the piece\r\n    $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1)\r\n      .find('.' + CSS.piece).css('display', 'none');\r\n  }\r\n}\r\n\r\nfunction updateDraggedPiece(x, y) {\r\n  // put the dragged piece over the mouse cursor\r\n  draggedPieceEl.css({\r\n    left: x - (SQUARE_SIZE / 2),\r\n    top: y - (SQUARE_SIZE / 2)\r\n  });\r\n\r\n  // get location\r\n  var location = isXYOnSquare(x, y);\r\n\r\n  // do nothing if the location has not changed\r\n  if (location === DRAGGED_PIECE_LOCATION) return;\r\n\r\n  // remove highlight from previous square\r\n  if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION])\r\n      .removeClass(CSS.highlight2);\r\n  }\r\n\r\n  // add highlight to new square\r\n  if (validSquare(location) === true) {\r\n    $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\r\n  }\r\n\r\n  // run onDragMove\r\n  if (typeof cfg.onDragMove === 'function') {\r\n    cfg.onDragMove(location, DRAGGED_PIECE_LOCATION,\r\n      DRAGGED_PIECE_SOURCE, DRAGGED_PIECE,\r\n      deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n  }\r\n\r\n  // update state\r\n  DRAGGED_PIECE_LOCATION = location;\r\n}\r\n\r\nfunction stopDraggedPiece(location) {\r\n  // determine what the action should be\r\n  var action = 'drop';\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\r\n    action = 'snapback';\r\n  }\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\r\n    action = 'trash';\r\n  }\r\n\r\n  // run their onDrop function, which can potentially change the drop action\r\n  if (cfg.hasOwnProperty('onDrop') === true &&\r\n    typeof cfg.onDrop === 'function') {\r\n    var newPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    // source piece is a spare piece and position is off the board\r\n    //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\r\n    // position has not changed; do nothing\r\n\r\n    // source piece is a spare piece and position is on the board\r\n    if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\r\n      // add the piece to the board\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    // source piece was on the board and position is off the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\r\n      // remove the piece from the board\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n    }\r\n\r\n    // source piece was on the board and position is on the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true &&\r\n      validSquare(location) === true) {\r\n      // move the piece\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    var oldPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE,\r\n      newPosition, oldPosition, CURRENT_ORIENTATION);\r\n    if (result === 'snapback' || result === 'trash') {\r\n      action = result;\r\n    }\r\n  }\r\n\r\n  // do it!\r\n  if (action === 'snapback') {\r\n    snapbackDraggedPiece();\r\n  }\r\n  else if (action === 'trash') {\r\n    trashDraggedPiece();\r\n  }\r\n  else if (action === 'drop') {\r\n    dropDraggedPieceOnSquare(location);\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Methods\r\n//------------------------------------------------------------------------------\r\n\r\n// clear the board\r\nwidget.clear = function(useAnimation) {\r\n  widget.position({}, useAnimation);\r\n};\r\n\r\n// remove the widget from the page\r\nwidget.destroy = function() {\r\n  // remove markup\r\n  containerEl.html('');\r\n  draggedPieceEl.remove();\r\n\r\n  // remove event handlers\r\n  containerEl.unbind();\r\n};\r\n\r\n// shorthand method to get the current FEN\r\nwidget.fen = function() {\r\n  return widget.position('fen');\r\n};\r\n\r\n// flip orientation\r\nwidget.flip = function() {\r\n  return widget.orientation('flip');\r\n};\r\n\r\n/*\r\n// TODO: write this, GitHub Issue #5\r\nwidget.highlight = function() {\r\n\r\n};\r\n*/\r\n\r\n// move pieces\r\nwidget.move = function() {\r\n  // no need to throw an error here; just do nothing\r\n  if (arguments.length === 0) return;\r\n\r\n  var useAnimation = true;\r\n\r\n  // collect the moves into an object\r\n  var moves = {};\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    // any \"false\" to this function means no animations\r\n    if (arguments[i] === false) {\r\n      useAnimation = false;\r\n      continue;\r\n    }\r\n\r\n    // skip invalid arguments\r\n    if (validMove(arguments[i]) !== true) {\r\n      error(2826, 'Invalid move passed to the move method.', arguments[i]);\r\n      continue;\r\n    }\r\n\r\n    var tmp = arguments[i].split('-');\r\n    moves[tmp[0]] = tmp[1];\r\n  }\r\n\r\n  // calculate position from moves\r\n  var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\r\n\r\n  // update the board\r\n  widget.position(newPos, useAnimation);\r\n\r\n  // return the new position object\r\n  return newPos;\r\n};\r\n\r\nwidget.orientation = function(arg) {\r\n  // no arguments, return the current orientation\r\n  if (arguments.length === 0) {\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // set to white or black\r\n  if (arg === 'white' || arg === 'black') {\r\n    CURRENT_ORIENTATION = arg;\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // flip orientation\r\n  if (arg === 'flip') {\r\n    CURRENT_ORIENTATION = (CURRENT_ORIENTATION === 'white') ? 'black' : 'white';\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  error(5482, 'Invalid value passed to the orientation method.', arg);\r\n};\r\n\r\nwidget.position = function(position, useAnimation) {\r\n  // no arguments, return the current position\r\n  if (arguments.length === 0) {\r\n    return deepCopy(CURRENT_POSITION);\r\n  }\r\n\r\n  // get position as FEN\r\n  if (typeof position === 'string' && position.toLowerCase() === 'fen') {\r\n    return objToFen(CURRENT_POSITION);\r\n  }\r\n\r\n  // default for useAnimations is true\r\n  if (useAnimation !== false) {\r\n    useAnimation = true;\r\n  }\r\n\r\n  // start position\r\n  if (typeof position === 'string' && position.toLowerCase() === 'start') {\r\n    position = deepCopy(START_POSITION);\r\n  }\r\n\r\n  // convert FEN to position object\r\n  if (validFen(position) === true) {\r\n    position = fenToObj(position);\r\n  }\r\n\r\n  // validate position object\r\n  if (validPositionObject(position) !== true) {\r\n    error(6482, 'Invalid value passed to the position method.', position);\r\n    return;\r\n  }\r\n\r\n  if (useAnimation === true) {\r\n    // start the animations\r\n    doAnimations(calculateAnimations(CURRENT_POSITION, position),\r\n      CURRENT_POSITION, position);\r\n\r\n    // set the new position\r\n    setCurrentPosition(position);\r\n  }\r\n  // instant update\r\n  else {\r\n    setCurrentPosition(position);\r\n    drawPositionInstant();\r\n  }\r\n};\r\n\r\nwidget.resize = function() {\r\n  // calulate the new square size\r\n  SQUARE_SIZE = calculateSquareSize();\r\n\r\n  // set board width\r\n  boardEl.css('width', (SQUARE_SIZE * 8) + 'px');\r\n\r\n  // set drag piece size\r\n  draggedPieceEl.css({\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE\r\n  });\r\n\r\n  // spare pieces\r\n  if (cfg.sparePieces === true) {\r\n    containerEl.find('.' + CSS.sparePieces)\r\n      .css('paddingLeft', (SQUARE_SIZE + BOARD_BORDER_SIZE) + 'px');\r\n  }\r\n\r\n  // redraw the board\r\n  drawBoard();\r\n};\r\n\r\n// set the starting position\r\nwidget.start = function(useAnimation) {\r\n  widget.position('start', useAnimation);\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Browser Events\r\n//------------------------------------------------------------------------------\r\n\r\nfunction isTouchDevice() {\r\n  return ('ontouchstart' in document.documentElement);\r\n}\r\n\r\n// reference: http://www.quirksmode.org/js/detect.html\r\nfunction isMSIE() {\r\n  return (navigator && navigator.userAgent &&\r\n      navigator.userAgent.search(/MSIE/) !== -1);\r\n}\r\n\r\nfunction stopDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction mousedownSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece(square, CURRENT_POSITION[square],\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousedownSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  beginDraggingPiece('spare', piece, e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece('spare', piece,\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousemoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  updateDraggedPiece(e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchmoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // prevent screen from scrolling\r\n  e.preventDefault();\r\n\r\n  updateDraggedPiece(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mouseupWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.pageX, e.pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction touchendWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction mouseenterSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoverSquare') !== true ||\r\n    typeof cfg.onMouseoverSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\nfunction mouseleaveSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoutSquare') !== true ||\r\n    typeof cfg.onMouseoutSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Initialization\r\n//------------------------------------------------------------------------------\r\n\r\nfunction addEvents() {\r\n  // prevent browser \"image drag\"\r\n  $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\r\n\r\n  // mouse drag pieces\r\n  boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\r\n  containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n    mousedownSparePiece);\r\n\r\n  // mouse enter / leave square\r\n  boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare)\r\n    .on('mouseleave', '.' + CSS.square, mouseleaveSquare);\r\n\r\n  // IE doesn't like the events on the window object, but other browsers\r\n  // perform better that way\r\n  if (isMSIE() === true) {\r\n    // IE-specific prevent browser \"image drag\"\r\n    document.ondragstart = function() { return false; };\r\n\r\n    $('body').on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n  else {\r\n    $(window).on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n\r\n  // touch drag pieces\r\n  if (isTouchDevice() === true) {\r\n    boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\r\n    containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n      touchstartSparePiece);\r\n    $(window).on('touchmove', touchmoveWindow)\r\n      .on('touchend', touchendWindow);\r\n  }\r\n}\r\n\r\nfunction initDom() {\r\n  // create unique IDs for all the elements we will create\r\n  createElIds();\r\n\r\n  // build board and save it in memory\r\n  containerEl.html(buildBoardContainer());\r\n  boardEl = containerEl.find('.' + CSS.board);\r\n\r\n  if (cfg.sparePieces === true) {\r\n    sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\r\n    sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\r\n  }\r\n\r\n  // create the drag piece\r\n  var draggedPieceId = uuid();\r\n  $('body').append(buildPiece('wP', true, draggedPieceId));\r\n  draggedPieceEl = $('#' + draggedPieceId);\r\n\r\n  // get the border size\r\n  BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\r\n\r\n  // set the size and draw the board\r\n  widget.resize();\r\n}\r\n\r\nfunction init() {\r\n  if (checkDeps() !== true ||\r\n      expandConfig() !== true) return;\r\n\r\n  initDom();\r\n  addEvents();\r\n}\r\n\r\n// go time\r\ninit();\r\n\r\n// return the widget object\r\nreturn widget;\r\n\r\n}; // end window.ChessBoard\r\n\r\n// expose util functions\r\nChessBoard.fenToObj = fenToObj;\r\nChessBoard.objToFen = objToFen;\r\n\r\nmodule.exports = ChessBoard;\r\n"]},"metadata":{},"sourceType":"script"}