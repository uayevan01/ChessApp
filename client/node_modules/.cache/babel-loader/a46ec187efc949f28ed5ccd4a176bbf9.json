{"ast":null,"code":"var _jsxFileName = \"/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport $ from 'jquery';\nimport ChessBoard from './ChessBoard.js';\nimport Chess from 'chess.js';\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [selected, setSelected] = useState('x');\n  const [position, setPosition] = useState('start');\n  const [chess, setChess] = useState(new Chess());\n  const [squareStyles, setSquareStyles] = useState({});\n  const [moves, setMoves] = useState([]);\n  const [positions, setPositions] = useState(['start']);\n  const [positionIndex, setPositionIndex] = useState(0);\n  const [moveable, setMoveable] = useState('false');\n  const [whiteTimer, setWhiteTimer] = useState(props.whiteTimer);\n  const [blackTimer, setBlackTimer] = useState(props.blackTimer);\n\n  const changePosition = index => {\n    if (index >= 0 && index <= positions.length - 1) {\n      setPosition(positions[index]);\n      setPositionIndex(index);\n      if (positions[index] === positions[positions.length - 1]) setMoveable('true');else setMoveable('false');\n    }\n  };\n\n  const convertToTuples = array => {\n    //[a, b, c, d, e] => [[a, b], [c, d], [e]]\n    var newArray = [];\n\n    for (var i = 0; i < array.length; i = i + 2) {\n      if (i >= array.length) break;else if (i + 1 < array.length) {\n        newArray.push([array[i], array[i + 1]]);\n      } else {\n        newArray.push([array[i]]);\n      }\n    }\n\n    return newArray;\n  };\n\n  const move = theMove => {\n    if (moveable) {\n      console.log(theMove);\n      chess.move({\n        from: theMove.sourceSquare,\n        to: theMove.targetSquare\n      });\n      setMoves(convertToTuples(chess.history()));\n      var newArray = positions;\n      newArray.push(chess.fen());\n      setPositions(newArray);\n      setPositionIndex(positionIndex + 1);\n      setPosition(chess.fen());\n    }\n  };\n\n  const movePiece = square => {\n    if (moveable) {\n      if (chess.get(square) && chess.get(square).color === chess.turn()) {\n        setSelected(square);\n        let highlightedSquares = {};\n        highlightedSquares[square] = {\n          backgroundColor: \"#0000ff\"\n        };\n        let moves = chess.moves({\n          square: square,\n          verbose: true\n        });\n\n        if (moves.length === 0) {\n          setSelected('x');\n          setSquareStyles({});\n          return;\n        }\n\n        let squaresToHighlight = [];\n\n        for (var i = 0; i < moves.length; i++) {\n          squaresToHighlight.push(moves[i].to);\n        }\n\n        for (var i = 0; i < squaresToHighlight.length; i++) {\n          highlightedSquares[squaresToHighlight[i]] = {\n            background: \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n            borderRadius: \"50%\"\n          };\n        }\n\n        setSquareStyles(highlightedSquares);\n      } else if (selected !== 'x') {\n        setSelected('x');\n        setSquareStyles({});\n        chess.move({\n          from: selected,\n          to: square\n        });\n        setMoves(convertToTuples(chess.history()));\n        var newArray = positions;\n        newArray.push(chess.fen());\n        setPositions(newArray);\n        setPositionIndex(positionIndex + 1);\n        changePosition(newArray.length - 1);\n      }\n    }\n  };\n\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChessBoard, {\n        orientation: props.color,\n        width: 600,\n        position: position,\n        onDrop: move,\n        onSquareClick: movePiece,\n        squareStyles: squareStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'scroll',\n        display: 'inline-block',\n        height: '600px',\n        width: '200px',\n        position: 'absolute',\n        top: '20px',\n        right: '-250px',\n        color: 'white',\n        backgroundColor: 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 'auto',\n          textAlign: 'center',\n          fontSize: '24px'\n        },\n        children: \"Game Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), moves.map((move, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '160px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '0px'\n          },\n          children: [\"\\xA0\", i + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this), positionIndex === 2 * i + 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 1),\n          style: {\n            position: 'absolute',\n            left: '40px',\n            backgroundColor: 'white',\n            color: 'black'\n          },\n          children: move[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 1),\n          style: {\n            position: 'absolute',\n            left: '40px'\n          },\n          children: move[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }, this), positionIndex === 2 * i + 2 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 2),\n          style: {\n            position: 'absolute',\n            left: '120px',\n            backgroundColor: 'white',\n            color: 'black'\n          },\n          children: move[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 2),\n          style: {\n            position: 'absolute',\n            left: '120px'\n          },\n          children: move[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        backgroundColor: 'white',\n        width: '200px',\n        position: 'absolute',\n        top: '620px',\n        right: '-250px',\n        height: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(0),\n        style: {\n          fontSize: '36px'\n        },\n        children: \"\\xAB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(positionIndex - 1),\n        style: {\n          fontSize: '36px'\n        },\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(positionIndex + 1),\n        style: {\n          fontSize: '36px'\n        },\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(positions.length - 1),\n        style: {\n          fontSize: '36px'\n        },\n        children: \"\\xBB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"Rdwvixgt98ZuBYUX2FMKcNcBrsE=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js"],"names":["React","$","ChessBoard","Chess","useState","useEffect","useContext","Tab","Tabs","TabList","TabPanel","useLocation","Link","axios","Board","props","selected","setSelected","position","setPosition","chess","setChess","squareStyles","setSquareStyles","moves","setMoves","positions","setPositions","positionIndex","setPositionIndex","moveable","setMoveable","whiteTimer","setWhiteTimer","blackTimer","setBlackTimer","changePosition","index","length","convertToTuples","array","newArray","i","push","move","theMove","console","log","from","sourceSquare","to","targetSquare","history","fen","movePiece","square","get","color","turn","highlightedSquares","backgroundColor","verbose","squaresToHighlight","background","borderRadius","overflow","display","height","width","top","right","textAlign","fontSize","map","justifyContent","left"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery'\nimport ChessBoard from './ChessBoard.js'\nimport Chess from 'chess.js'\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Board(props) {\n    const [selected, setSelected] = useState('x')\n    const [position, setPosition] = useState('start')\n    const [chess, setChess] = useState(new Chess())\n    const [squareStyles, setSquareStyles] = useState({})\n    const [moves, setMoves] = useState([])\n    const [positions, setPositions] = useState(['start'])\n    const [positionIndex, setPositionIndex] = useState(0)\n    const [moveable, setMoveable] = useState('false')\n    const [whiteTimer, setWhiteTimer] = useState(props.whiteTimer)\n    const [blackTimer, setBlackTimer] = useState(props.blackTimer)\n\n\n    const changePosition = (index) => {\n        if(index >= 0 && index <= positions.length - 1)\n        {\n            setPosition(positions[index]);\n            setPositionIndex(index);\n            if(positions[index] === positions[positions.length - 1])\n                setMoveable('true')\n            else\n                setMoveable('false')\n        }\n    }\n\n    const convertToTuples = (array) => {\n        //[a, b, c, d, e] => [[a, b], [c, d], [e]]\n        var newArray = [];\n        for(var i = 0; i < array.length; i=i+2) {\n            if(i >= array.length)\n                break;\n            else if(i + 1 < array.length) {\n                newArray.push([array[i], array[i+1]])\n            }\n            else {\n                newArray.push([array[i]])\n            }\n        }\n        return newArray;\n    }\n    const move = (theMove) => {\n        if(moveable) {\n            console.log(theMove)\n            chess.move({from: theMove.sourceSquare, to: theMove.targetSquare})\n            setMoves(convertToTuples(chess.history()))\n            var newArray = positions\n            newArray.push(chess.fen())\n            setPositions(newArray)\n            setPositionIndex(positionIndex + 1);\n            setPosition(chess.fen())\n        }\n    }\n\n    const movePiece = (square) => {\n        if(moveable) {\n            if(chess.get(square) && chess.get(square).color === chess.turn()) {\n                setSelected(square)\n                let highlightedSquares = {};\n                highlightedSquares[square] = \n                {\n                    backgroundColor: \"#0000ff\"\n                }\n                let moves = chess.moves({\n                    square: square,\n                    verbose: true\n                });\n                if (moves.length === 0) {\n                    setSelected('x');\n                    setSquareStyles({})\n                    return;\n                }\n            \n                let squaresToHighlight = [];\n                for (var i = 0; i < moves.length; i++) {\n                    squaresToHighlight.push(moves[i].to);\n                }\n                for(var i = 0; i < squaresToHighlight.length; i ++) {\n                    highlightedSquares[squaresToHighlight[i]] = \n                    {\n                        background:\n                        \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n                        borderRadius: \"50%\"\n                    }\n                }\n                setSquareStyles(highlightedSquares)\n            }\n            else if(selected !== 'x') {\n                setSelected('x');\n                setSquareStyles({});\n                chess.move({from: selected, to: square});\n                setMoves(convertToTuples(chess.history()));\n                var newArray = positions;\n                newArray.push(chess.fen());\n                setPositions(newArray);\n                setPositionIndex(positionIndex + 1);\n                changePosition(newArray.length - 1);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    })\n    return(\n        <body>\n            <div>\n                <ChessBoard orientation={props.color} width={600} position={position} onDrop={move} onSquareClick={movePiece} squareStyles={squareStyles}/>                 \n            </div>\n            <div style={{overflow: 'scroll', display: 'inline-block', height: '600px', width: '200px', position: 'absolute', top: '20px', right: '-250px', color: 'white', backgroundColor: 'black'}}>\n                <div style={{width: 'auto', textAlign: 'center', fontSize: '24px'}}>Game Moves</div>\n                \n                {\n                    moves.map((move, i) => (\n                        <p style={{display: 'flex', justifyContent: 'space-between', width: '160px'}}>\n                            <span style={{position: 'absolute', left: '0px'}}>&nbsp;{i+1}</span>\n                            {positionIndex === 2*i + 1 ? \n                                <span onClick={() => changePosition(2*i + 1)} style={{position: 'absolute', left: '40px', backgroundColor: 'white', color: 'black'}}>{move[0]}</span>\n                                :\n                                <span onClick={() => changePosition(2*i + 1)} style={{position: 'absolute', left: '40px'}}>{move[0]}</span>\n                            }\n                            {positionIndex === 2*i + 2 ?\n                                <span onClick={() => changePosition(2*i + 2)} style={{position: 'absolute', left: '120px', backgroundColor: 'white', color: 'black'}}>{move[1]}</span>\n                                :\n                                <span onClick={() => changePosition(2*i + 2)} style={{position: 'absolute', left: '120px'}}>{move[1]}</span>\n                            }\n \n                            <br/>\n                        </p>\n                    ))\n                }\n            </div>\n            <div style={{textAlign: 'center', backgroundColor: 'white', width: '200px', position: 'absolute', top: '620px', right: '-250px', height: '40px'}}>\n                <span onClick={() => changePosition(0)} style={{fontSize: '36px'}}>&laquo;</span>\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positionIndex - 1)} style={{fontSize: '36px'}}>&lt;</span>\n                &nbsp;\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positionIndex + 1)} style={{fontSize: '36px'}}>&gt;</span>\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positions.length - 1)} style={{fontSize: '36px'}}>&raquo;</span>\n            </div>\n        </body>\n    );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}