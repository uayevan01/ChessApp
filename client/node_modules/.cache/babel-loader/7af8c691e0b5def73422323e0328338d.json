{"ast":null,"code":"var _jsxFileName = \"/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport $ from 'jquery';\nimport ChessBoard from './ChessBoard.js';\nimport Chess from 'chess.js';\nimport { useState, useEffect, useContext, memo } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar engine = new Worker('stockfish.js');\nvar evaler = new Worker('stockfish.js');\nvar engineStatus = {};\n\nfunction Board(props) {\n  _s();\n\n  const [selected, setSelected] = useState('x');\n  const [position, setPosition] = useState('start');\n  const [chess, setChess] = useState(new Chess());\n  const [squareStyles, setSquareStyles] = useState({});\n  const [moves, setMoves] = useState([]);\n  const [positions, setPositions] = useState(['start']);\n  const [positionIndex, setPositionIndex] = useState(0);\n  const [moveable, setMoveable] = useState('false');\n  const [whiteTimer, setWhiteTimer] = useState(props.timer);\n  const [blackTimer, setBlackTimer] = useState(props.timer);\n  const [gameRunning, setGameRunning] = useState('running');\n  const [gameEndReason, setGameEndReason] = useState('');\n  const bot = props.color.charAt(0);\n\n  const changePosition = index => {\n    if (index >= 0 && index <= positions.length - 1) {\n      setPosition(positions[index]);\n      setPositionIndex(index);\n      if (positions[index] === positions[positions.length - 1]) setMoveable('true');else setMoveable('false');\n    }\n  };\n\n  const convertToTuples = array => {\n    //[a, b, c, d, e] => [[a, b], [c, d], [e]]\n    var newArray = [];\n\n    for (var i = 0; i < array.length; i = i + 2) {\n      if (i >= array.length) break;else if (i + 1 < array.length) {\n        newArray.push([array[i], array[i + 1]]);\n      } else {\n        newArray.push([array[i]]);\n      }\n    }\n\n    return newArray;\n  };\n\n  const move = theMove => {\n    if (moveable && gameRunning === \"running\" && theMove.piece.charAt(0) === chess.turn()) {\n      console.log(theMove);\n      chess.move({\n        from: theMove.sourceSquare,\n        to: theMove.targetSquare,\n        promotion: 'q'\n      });\n      setMoves(convertToTuples(chess.history()));\n      var newArray = positions;\n      newArray.push(chess.fen());\n      setPositions(newArray);\n      setPositionIndex(positionIndex + 1);\n      setPosition(chess.fen());\n\n      if (chess.turn() === \"b\") {\n        setTimeout(() => setWhiteTimer(whiteTimer + parseInt(props.increment)), 1000);\n      } else {}\n    }\n  };\n\n  const movePiece = square => {\n    if (moveable && gameRunning === \"running\") {\n      if (chess.get(square) && chess.get(square).color === chess.turn()) {\n        setSelected(square);\n        let highlightedSquares = {};\n        highlightedSquares[square] = {\n          backgroundColor: \"#0000ff\"\n        };\n        let moves = chess.moves({\n          square: square,\n          verbose: true\n        });\n\n        if (moves.length === 0) {\n          setSelected('x');\n          setSquareStyles({});\n          return;\n        }\n\n        let squaresToHighlight = [];\n\n        for (var i = 0; i < moves.length; i++) {\n          squaresToHighlight.push(moves[i].to);\n        }\n\n        for (var i = 0; i < squaresToHighlight.length; i++) {\n          highlightedSquares[squaresToHighlight[i]] = {\n            background: \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n            borderRadius: \"50%\"\n          };\n        }\n\n        setSquareStyles(highlightedSquares);\n      } else if (selected !== 'x') {\n        setSelected('x');\n        setSquareStyles({});\n        chess.move({\n          from: selected,\n          to: square,\n          promotion: 'q'\n        });\n        setMoves(convertToTuples(chess.history()));\n        var newArray = positions;\n        newArray.push(chess.fen());\n        setPositions(newArray);\n        changePosition(newArray.length - 1);\n\n        if (chess.turn() === \"b\") {\n          setTimeout(() => setWhiteTimer(whiteTimer + parseInt(props.increment)), 1000);\n        } else {\n          setTimeout(() => setBlackTimer(blackTimer + parseInt(props.increment)), 1000);\n        }\n      }\n    }\n  };\n\n  const formatTime = stopwatch => {\n    var time = new Date(stopwatch * 1000).toISOString().substr(14, 5);\n    return time;\n  };\n\n  useEffect(() => {\n    if (whiteTimer > 0 && blackTimer > 0 && chess.in_checkmate() === false && chess.in_threefold_repetition() === false && chess.in_stalemate() === false) {\n      if (chess.turn() === \"w\") {\n        setTimeout(() => setWhiteTimer(whiteTimer - 1), 1000);\n      } else {\n        setTimeout(() => setBlackTimer(blackTimer - 1), 1000);\n      }\n    } else {\n      if (chess.in_checkmate() === true) {\n        if (chess.turn() === 'w') setGameRunning('Black');else setGameRunning('White');\n        setGameEndReason('checkmate');\n      } else if (chess.in_stalemate() === true) {\n        if (chess.turn() === 'w') setGameRunning('Black');else setGameRunning('White');\n        setGameEndReason('stalemate');\n      } else if (chess.in_threefold_repetition() === true) {\n        if (chess.turn() === 'w') setGameRunning('Black');else setGameRunning('White');\n        setGameEndReason('threefold repetition');\n      } else if (whiteTimer <= 0) {\n        setGameRunning('Black');\n        setGameEndReason('timeout');\n      } else if (blackTimer <= 0) {\n        setGameRunning('White');\n        setGameEndReason('timeout');\n      }\n    }\n  }, [whiteTimer, blackTimer, chess]);\n\n  engine.onmessage = event => {\n    let line;\n\n    if (event && typeof event === \"object\") {\n      line = event.data;\n    } else {\n      line = event;\n    } // console.log('Reply: ' + line);\n\n\n    if (line === \"uciok\") {\n      engineStatus.engineLoaded = true;\n    } else if (line === \"readyok\") {\n      engineStatus.engineReady = true;\n    } else {\n      let match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/); /// Did the AI move?\n\n      if (match) {\n        // isEngineRunning = false;\n        game.move({\n          from: match[1],\n          to: match[2],\n          promotion: match[3]\n        });\n        this.setState({\n          fen: game.fen()\n        });\n        prepareMove();\n        uciCmd(\"eval\", evaler); //uciCmd(\"eval\");\n        /// Is it sending feedback?\n      } else if (match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/)) {\n        engineStatus.search = \"Depth: \" + match[1] + \" Nps: \" + match[2];\n      } /// Is it sending feed back with a score?\n\n\n      if (match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/)) {\n        let score = parseInt(match[2], 10) * (game.turn() === \"w\" ? 1 : -1); /// Is it measuring in centipawns?\n\n        if (match[1] === \"cp\") {\n          engineStatus.score = (score / 100.0).toFixed(2); /// Did it find a mate?\n        } else if (match[1] === \"mate\") {\n          engineStatus.score = \"Mate in \" + Math.abs(score);\n        } /// Is the score bounded?\n\n\n        if (match = line.match(/\\b(upper|lower)bound\\b/)) {\n          engineStatus.score = (match[1] === \"upper\" === (game.turn() === \"w\") ? \"<= \" : \">= \") + engineStatus.score;\n        }\n      }\n    } // displayStatus();\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChessBoard, {\n        orientation: props.color,\n        width: 600,\n        position: position,\n        onDrop: move,\n        onSquareClick: movePiece,\n        squareStyles: squareStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        fontSize: '36px',\n        width: '140px',\n        textAlign: 'right',\n        borderRadius: '6px',\n        left: '460px',\n        top: '624px'\n      },\n      children: props.color === \"white\" ? formatTime(whiteTimer) : formatTime(blackTimer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        fontSize: '36px',\n        width: '140px',\n        textAlign: 'right',\n        borderRadius: '6px',\n        left: '460px',\n        top: '-30px'\n      },\n      children: props.color === \"white\" ? formatTime(blackTimer) : formatTime(whiteTimer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'scroll',\n        display: 'inline-block',\n        height: '600px',\n        width: '200px',\n        position: 'absolute',\n        top: '20px',\n        right: '-250px',\n        color: 'white',\n        backgroundColor: 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 'auto',\n          textAlign: 'center',\n          fontSize: '24px'\n        },\n        children: \"Game Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), moves.map((move, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '160px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            left: '0px'\n          },\n          children: [\"\\xA0\", i + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this), positionIndex === 2 * i + 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 1),\n          style: {\n            position: 'absolute',\n            left: '40px',\n            backgroundColor: 'white',\n            color: 'black'\n          },\n          children: move[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 1),\n          style: {\n            position: 'absolute',\n            left: '40px'\n          },\n          children: move[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 33\n        }, this), positionIndex === 2 * i + 2 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 2),\n          style: {\n            position: 'absolute',\n            left: '120px',\n            backgroundColor: 'white',\n            color: 'black'\n          },\n          children: move[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => changePosition(2 * i + 2),\n          style: {\n            position: 'absolute',\n            left: '120px'\n          },\n          children: move[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        backgroundColor: 'white',\n        width: '200px',\n        position: 'absolute',\n        top: '620px',\n        right: '-250px',\n        height: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(0),\n        style: {\n          fontSize: '36px'\n        },\n        children: \"\\xAB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(positionIndex - 1),\n        style: {\n          fontSize: '36px'\n        },\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(positionIndex + 1),\n        style: {\n          fontSize: '36px'\n        },\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => changePosition(positions.length - 1),\n        style: {\n          fontSize: '36px'\n        },\n        children: \"\\xBB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), gameRunning !== 'running' ? gameEndReason === 'checkmate' || gameEndReason === 'timeout' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        fontSize: '36px',\n        backgroundColor: 'white',\n        bottom: '-100px',\n        borderRadius: '8px'\n      },\n      children: [gameRunning, \" won the game by \", gameEndReason, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        fontSize: '36px',\n        backgroundColor: 'white',\n        bottom: '-100px',\n        borderRadius: '8px'\n      },\n      children: [\"Game ended in a draw by \", gameEndReason, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"L7EeHjoFynIxicnlZP089XV4xj0=\");\n\n_c = Board;\nexport default _c2 = /*#__PURE__*/memo(Board);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js"],"names":["React","$","ChessBoard","Chess","useState","useEffect","useContext","memo","Tab","Tabs","TabList","TabPanel","useLocation","Link","axios","engine","Worker","evaler","engineStatus","Board","props","selected","setSelected","position","setPosition","chess","setChess","squareStyles","setSquareStyles","moves","setMoves","positions","setPositions","positionIndex","setPositionIndex","moveable","setMoveable","whiteTimer","setWhiteTimer","timer","blackTimer","setBlackTimer","gameRunning","setGameRunning","gameEndReason","setGameEndReason","bot","color","charAt","changePosition","index","length","convertToTuples","array","newArray","i","push","move","theMove","piece","turn","console","log","from","sourceSquare","to","targetSquare","promotion","history","fen","setTimeout","parseInt","increment","movePiece","square","get","highlightedSquares","backgroundColor","verbose","squaresToHighlight","background","borderRadius","formatTime","stopwatch","time","Date","toISOString","substr","in_checkmate","in_threefold_repetition","in_stalemate","onmessage","event","line","data","engineLoaded","engineReady","match","game","setState","prepareMove","uciCmd","search","score","toFixed","Math","abs","fontSize","width","textAlign","left","top","overflow","display","height","right","map","justifyContent","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery'\nimport ChessBoard from './ChessBoard.js'\nimport Chess from 'chess.js'\nimport { useState, useEffect, useContext, memo } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nvar engine = new Worker('stockfish.js');\nvar evaler = new Worker('stockfish.js');\nvar engineStatus = {}\n\nfunction Board(props) {\n    const [selected, setSelected] = useState('x')\n    const [position, setPosition] = useState('start')\n    const [chess, setChess] = useState(new Chess())\n    const [squareStyles, setSquareStyles] = useState({})\n    const [moves, setMoves] = useState([])\n    const [positions, setPositions] = useState(['start'])\n    const [positionIndex, setPositionIndex] = useState(0)\n    const [moveable, setMoveable] = useState('false')\n    const [whiteTimer, setWhiteTimer] = useState(props.timer)\n    const [blackTimer, setBlackTimer] = useState(props.timer)\n    const [gameRunning, setGameRunning] = useState('running')\n    const [gameEndReason, setGameEndReason] = useState('')\n\n    const bot = props.color.charAt(0);\n\n    const changePosition = (index) => {\n        if(index >= 0 && index <= positions.length - 1)\n        {\n            setPosition(positions[index]);\n            setPositionIndex(index);\n            if(positions[index] === positions[positions.length - 1])\n                setMoveable('true')\n            else\n                setMoveable('false')\n        }\n    }\n\n    const convertToTuples = (array) => {\n        //[a, b, c, d, e] => [[a, b], [c, d], [e]]\n        var newArray = [];\n        for(var i = 0; i < array.length; i=i+2) {\n            if(i >= array.length)\n                break;\n            else if(i + 1 < array.length) {\n                newArray.push([array[i], array[i+1]])\n            }\n            else {\n                newArray.push([array[i]])\n            }\n        }\n        return newArray;\n    }\n    const move = (theMove) => {\n        if(moveable && gameRunning===\"running\" && theMove.piece.charAt(0)===chess.turn()) {\n            console.log(theMove)\n            chess.move({from: theMove.sourceSquare, to: theMove.targetSquare, promotion: 'q'})\n            setMoves(convertToTuples(chess.history()))\n            var newArray = positions\n            newArray.push(chess.fen())\n            setPositions(newArray)\n            setPositionIndex(positionIndex + 1);\n            setPosition(chess.fen())\n            if(chess.turn() === \"b\") {\n                setTimeout(() => setWhiteTimer(whiteTimer + parseInt(props.increment)), 1000)\n            }\n            else {\n            }\n        }\n    }\n\n    const movePiece = (square) => {\n        if(moveable && gameRunning===\"running\") {\n            if(chess.get(square) && chess.get(square).color === chess.turn()) {\n                setSelected(square)\n                let highlightedSquares = {};\n                highlightedSquares[square] = \n                {\n                    backgroundColor: \"#0000ff\"\n                }\n                let moves = chess.moves({\n                    square: square,\n                    verbose: true\n                });\n                if (moves.length === 0) {\n                    setSelected('x');\n                    setSquareStyles({})\n                    return;\n                }\n            \n                let squaresToHighlight = [];\n                for (var i = 0; i < moves.length; i++) {\n                    squaresToHighlight.push(moves[i].to);\n                }\n                for(var i = 0; i < squaresToHighlight.length; i ++) {\n                    highlightedSquares[squaresToHighlight[i]] = \n                    {\n                        background:\n                        \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n                        borderRadius: \"50%\"\n                    }\n                }\n                setSquareStyles(highlightedSquares)\n            }\n            else if(selected !== 'x') {\n                setSelected('x');\n                setSquareStyles({});\n                chess.move({from: selected, to: square, promotion: 'q'});\n                setMoves(convertToTuples(chess.history()));\n                var newArray = positions;\n                newArray.push(chess.fen());\n                setPositions(newArray);\n                changePosition(newArray.length - 1);\n                if(chess.turn() === \"b\") {\n                    setTimeout(() => setWhiteTimer(whiteTimer + parseInt(props.increment)), 1000)\n                }\n                else {\n                    setTimeout(() => setBlackTimer(blackTimer + parseInt(props.increment)), 1000)\n                }\n            }\n        }\n    }\n\n    const formatTime = (stopwatch) => {\n        var time = new Date(stopwatch * 1000).toISOString().substr(14, 5);\n        return time;\n    }\n\n    useEffect(() => {\n        if(whiteTimer > 0 && blackTimer > 0 && chess.in_checkmate() === false && \n        chess.in_threefold_repetition() === false && chess.in_stalemate() === false) {\n            if(chess.turn() === \"w\") {\n                setTimeout(() => setWhiteTimer(whiteTimer - 1), 1000)\n            }\n            else {\n                setTimeout(() => setBlackTimer(blackTimer - 1), 1000)\n            }\n        }\n        else {\n            if(chess.in_checkmate() === true) {\n                if(chess.turn() === 'w')\n                    setGameRunning('Black')\n                else\n                    setGameRunning('White')\n                setGameEndReason('checkmate')\n            }\n            else if(chess.in_stalemate() === true) {\n                if(chess.turn() === 'w')\n                    setGameRunning('Black')\n                else\n                    setGameRunning('White')\n                setGameEndReason('stalemate')\n            }\n            else if(chess.in_threefold_repetition() === true) {\n                if(chess.turn() === 'w')\n                    setGameRunning('Black')\n                else\n                    setGameRunning('White')\n                setGameEndReason('threefold repetition')\n\n            }\n            else if(whiteTimer <= 0) {\n                setGameRunning('Black')\n                setGameEndReason('timeout')\n            }\n            else if(blackTimer <= 0) {\n                setGameRunning('White')\n                setGameEndReason('timeout')\n            }\n        }\n    }, [whiteTimer, blackTimer, chess])\n\n\n    engine.onmessage = event => {\n        let line;\n  \n        if (event && typeof event === \"object\") {\n          line = event.data;\n        } else {\n          line = event;\n        }\n        // console.log('Reply: ' + line);\n        if (line === \"uciok\") {\n          engineStatus.engineLoaded = true;\n        } else if (line === \"readyok\") {\n          engineStatus.engineReady = true;\n        } else {\n          let match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/);\n          /// Did the AI move?\n          if (match) {\n            // isEngineRunning = false;\n            game.move({ from: match[1], to: match[2], promotion: match[3] });\n            this.setState({ fen: game.fen() });\n            prepareMove();\n            uciCmd(\"eval\", evaler);\n            //uciCmd(\"eval\");\n            /// Is it sending feedback?\n          } else if (\n            (match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/))\n          ) {\n            engineStatus.search = \"Depth: \" + match[1] + \" Nps: \" + match[2];\n          }\n  \n          /// Is it sending feed back with a score?\n          if ((match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/))) {\n            let score = parseInt(match[2], 10) * (game.turn() === \"w\" ? 1 : -1);\n            /// Is it measuring in centipawns?\n            if (match[1] === \"cp\") {\n              engineStatus.score = (score / 100.0).toFixed(2);\n              /// Did it find a mate?\n            } else if (match[1] === \"mate\") {\n              engineStatus.score = \"Mate in \" + Math.abs(score);\n            }\n  \n            /// Is the score bounded?\n            if ((match = line.match(/\\b(upper|lower)bound\\b/))) {\n              engineStatus.score =\n                ((match[1] === \"upper\") === (game.turn() === \"w\")\n                  ? \"<= \"\n                  : \">= \") + engineStatus.score;\n            }\n          }\n        }\n        // displayStatus();\n      };\n\n    return(\n        <body>\n            <div>\n                <ChessBoard orientation={props.color} width={600} \n                position={position} onDrop={move} onSquareClick={movePiece} squareStyles={squareStyles}/>                 \n            </div>\n            <div style={{position: 'absolute', backgroundColor: 'white', \n            fontSize: '36px', width: '140px', textAlign: 'right',\n            borderRadius: '6px', left: '460px', top: '624px'}}>\n                {   props.color === \"white\" ?\n                        formatTime(whiteTimer)\n                        :\n                        formatTime(blackTimer)\n                }\n            </div>\n            <div style={{position: 'absolute', backgroundColor: 'white', \n            fontSize: '36px', width: '140px', textAlign: 'right',\n            borderRadius: '6px', left: '460px', top: '-30px'}}>\n                {   props.color === \"white\" ?\n                        formatTime(blackTimer)\n                        :\n                        formatTime(whiteTimer)\n                }\n            </div>\n            \n            <div style={{overflow: 'scroll', display: 'inline-block', height: '600px', width: '200px', position: 'absolute', top: '20px', right: '-250px', color: 'white', backgroundColor: 'black'}}>\n                <div style={{width: 'auto', textAlign: 'center', fontSize: '24px'}}>Game Moves</div>\n                \n                {\n                    moves.map((move, i) => (\n                        <p style={{display: 'flex', justifyContent: 'space-between', width: '160px'}}>\n                            <span style={{position: 'absolute', left: '0px'}}>&nbsp;{i+1}</span>\n                            {positionIndex === 2*i + 1 ? \n                                <span onClick={() => changePosition(2*i + 1)} style={{position: 'absolute', left: '40px', backgroundColor: 'white', color: 'black'}}>{move[0]}</span>\n                                :\n                                <span onClick={() => changePosition(2*i + 1)} style={{position: 'absolute', left: '40px'}}>{move[0]}</span>\n                            }\n                            {positionIndex === 2*i + 2 ?\n                                <span onClick={() => changePosition(2*i + 2)} style={{position: 'absolute', left: '120px', backgroundColor: 'white', color: 'black'}}>{move[1]}</span>\n                                :\n                                <span onClick={() => changePosition(2*i + 2)} style={{position: 'absolute', left: '120px'}}>{move[1]}</span>\n                            }\n \n                            <br/>\n                        </p>\n                    ))\n                }\n            </div>\n            <div style={{textAlign: 'center', backgroundColor: 'white', width: '200px', position: 'absolute', top: '620px', right: '-250px', height: '40px'}}>\n                <span onClick={() => changePosition(0)} style={{fontSize: '36px'}}>&laquo;</span>\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positionIndex - 1)} style={{fontSize: '36px'}}>&lt;</span>\n                &nbsp;\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positionIndex + 1)} style={{fontSize: '36px'}}>&gt;</span>\n                &nbsp;\n                &nbsp;\n                <span onClick={() => changePosition(positions.length - 1)} style={{fontSize: '36px'}}>&raquo;</span>\n            </div>\n            {\n                gameRunning !== 'running' ?\n                    gameEndReason === 'checkmate' || gameEndReason === 'timeout' ?\n                        <div style={{position: 'absolute', fontSize: '36px', \n                        backgroundColor: 'white', bottom: '-100px', \n                        borderRadius: '8px'}}>\n                            {gameRunning} won the game by {gameEndReason}!\n                            </div>\n                        :\n                        <div style={{position: 'absolute', fontSize: '36px', \n                        backgroundColor: 'white', bottom: '-100px', \n                        borderRadius: '8px'}}>\n                            Game ended in a draw by {gameEndReason}!\n                            </div>\n                    :\n                    null\n            }\n        </body>\n    );\n}\n\nexport default memo(Board);\n"]},"metadata":{},"sourceType":"module"}