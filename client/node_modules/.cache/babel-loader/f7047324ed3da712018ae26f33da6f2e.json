{"ast":null,"code":"var _jsxFileName = \"/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport $ from 'jquery';\nimport Chessboard from 'chessboardjsx';\nimport ChessBoard from './ChessBoard.js';\nimport Chess from 'chess.js';\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [selected, setSelected] = useState('x');\n  const [position, setPosition] = useState('start');\n  const [chess, setChess] = useState(new Chess());\n  const [squareStyles, setSquareStyles] = useState({});\n  const [moves, setMoves] = useState([]);\n\n  const convertToTuples = array => {\n    //[a, b, c, d, e] => [[a, b], [c, d], [e]]\n    var newArray = [];\n\n    for (var i = 0; i < array.length; i = i + 2) {\n      if (i >= array.length) break;else if (i + 1 < array.length) {\n        newArray.push([array[i], array[i + 1]]);\n      } else {\n        newArray.push([array[i]]);\n      }\n    }\n\n    return newArray;\n  };\n\n  const move = theMove => {\n    console.log(theMove);\n    chess.move({\n      from: theMove.sourceSquare,\n      to: theMove.targetSquare\n    });\n    setMoves(convertToTuples(chess.history()));\n    setPosition(chess.fen());\n    console.log(chess.ascii());\n  };\n\n  const movePiece = square => {\n    console.log(square);\n    console.log(chess.get(square));\n\n    if (chess.get(square) && chess.get(square).color === chess.turn()) {\n      setSelected(square);\n      let highlightedSquares = {};\n      highlightedSquares[square] = {\n        backgroundColor: \"#0000ff\"\n      };\n      let moves = chess.moves({\n        square: square,\n        verbose: true\n      });\n\n      if (moves.length === 0) {\n        setSelected('x');\n        setSquareStyles({});\n        return;\n      }\n\n      let squaresToHighlight = [];\n\n      for (var i = 0; i < moves.length; i++) {\n        squaresToHighlight.push(moves[i].to);\n      }\n\n      console.log(squaresToHighlight);\n\n      for (var i = 0; i < squaresToHighlight.length; i++) {\n        highlightedSquares[squaresToHighlight[i]] = {\n          background: \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n          borderRadius: \"50%\"\n        };\n      }\n\n      setSquareStyles(highlightedSquares);\n    } else if (selected !== 'x') {\n      chess.move({\n        from: selected,\n        to: square\n      });\n      setMoves(convertToTuples(chess.history()));\n      setPosition(chess.fen());\n      console.log(chess.ascii());\n      setSelected('x');\n      setSquareStyles({});\n    }\n  };\n\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChessBoard, {\n        orientation: props.color,\n        width: 600,\n        position: position,\n        onDrop: move,\n        onSquareClick: movePiece,\n        squareStyles: squareStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        height: '600px',\n        width: '200px',\n        position: 'absolute',\n        top: '2.5%',\n        right: '-40%',\n        color: 'white',\n        backgroundColor: 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 'auto',\n          textAlign: 'center'\n        },\n        children: \"Game Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), moves.map((move, i) => i % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\xA0\", i / 2 + 1, console.log(move), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            left: '5%'\n          },\n          children: move\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          left: '40%'\n        },\n        children: [move, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"eRs62nEFs94Qs1fOW4S2IGsdC6I=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js"],"names":["React","$","Chessboard","ChessBoard","Chess","useState","useEffect","useContext","Tab","Tabs","TabList","TabPanel","useLocation","Link","axios","Board","props","selected","setSelected","position","setPosition","chess","setChess","squareStyles","setSquareStyles","moves","setMoves","convertToTuples","array","newArray","i","length","push","move","theMove","console","log","from","sourceSquare","to","targetSquare","history","fen","ascii","movePiece","square","get","color","turn","highlightedSquares","backgroundColor","verbose","squaresToHighlight","background","borderRadius","display","height","width","top","right","textAlign","map","left"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery'\nimport Chessboard from 'chessboardjsx'\nimport ChessBoard from './ChessBoard.js'\nimport Chess from 'chess.js'\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Board(props) {\n    const [selected, setSelected] = useState('x')\n    const [position, setPosition] = useState('start')\n    const [chess, setChess] = useState(new Chess())\n    const [squareStyles, setSquareStyles] = useState({})\n    const [moves, setMoves] = useState([])\n\n\n    const convertToTuples = (array) => {\n        //[a, b, c, d, e] => [[a, b], [c, d], [e]]\n        var newArray = [];\n        for(var i = 0; i < array.length; i=i+2) {\n            if(i >= array.length)\n                break;\n            else if(i + 1 < array.length) {\n                newArray.push([array[i], array[i+1]])\n            }\n            else {\n                newArray.push([array[i]])\n            }\n        }\n        return newArray;\n    }\n    const move = (theMove) => {\n        console.log(theMove)\n        chess.move({from: theMove.sourceSquare, to: theMove.targetSquare})\n        setMoves(convertToTuples(chess.history()))\n        setPosition(chess.fen())\n        console.log(chess.ascii())\n    }\n\n    const movePiece = (square) => {\n        console.log(square)\n        console.log(chess.get(square))\n        if(chess.get(square) && chess.get(square).color === chess.turn()) {\n            setSelected(square)\n            let highlightedSquares = {};\n            highlightedSquares[square] = \n            {\n                backgroundColor: \"#0000ff\"\n            }\n            let moves = chess.moves({\n                square: square,\n                verbose: true\n              });\n              if (moves.length === 0) {\n                  setSelected('x');\n                  setSquareStyles({})\n                  return;\n              }\n          \n              let squaresToHighlight = [];\n              for (var i = 0; i < moves.length; i++) {\n                squaresToHighlight.push(moves[i].to);\n              }\n              console.log(squaresToHighlight)\n              for(var i = 0; i < squaresToHighlight.length; i ++) {\n                highlightedSquares[squaresToHighlight[i]] = \n                {\n                    background:\n                    \"radial-gradient(circle, #0000ff 20%, transparent 40%)\",\n                    borderRadius: \"50%\"\n                }\n              }\n              setSquareStyles(highlightedSquares)\n        }\n        else if(selected !== 'x') {\n            chess.move({from: selected, to: square})\n            setMoves(convertToTuples(chess.history()))\n            setPosition(chess.fen())\n            console.log(chess.ascii())\n            setSelected('x')\n            setSquareStyles({})\n        }\n    }\n\n    useEffect(() => {\n\n    })\n    return(\n        <body>\n            <div>\n                <ChessBoard orientation={props.color} width={600} position={position} onDrop={move} onSquareClick={movePiece} squareStyles={squareStyles}/>                 \n            </div>\n            <div style={{display: 'inline-block', height: '600px', width: '200px', position: 'absolute', top: '2.5%', right: '-40%', color: 'white', backgroundColor: 'black'}}>\n                <div style={{width: 'auto', textAlign: 'center'}}>Game Moves</div>\n                    <br/>\n                {\n                    moves.map((move, i) => (\n                        i % 2 === 0 ?\n                            <span>&nbsp;{(i/2)+1}\n                            {console.log(move)}\n                                <span style={{left: '5%'}}>{move}</span>\n                            </span>\n                            :\n                            <span style={{left: '40%'}}>\n                                {move}\n                                <br/>\n                            </span>\n                    ))\n                }\n            </div>\n        </body>\n    );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}