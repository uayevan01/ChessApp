{"ast":null,"code":"var _jsxFileName = \"/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport $ from 'jquery';\nimport Chessboard from 'chessboardjsx';\nimport Chess from 'chess.js';\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const [selected, setSelected] = useState('x');\n  const [position, setPosition] = useState('start');\n  const [chess, setChess] = useState(new Chess());\n  const [squareStyles, setSquareStyles] = useState({});\n\n  const move = theMove => {\n    console.log(theMove);\n    chess.move({\n      from: theMove.sourceSquare,\n      to: theMove.targetSquare\n    });\n    setPosition(chess.fen());\n    console.log(chess.ascii());\n  };\n\n  const movePiece = square => {\n    console.log(square);\n    console.log(chess.get(square));\n\n    if (chess.get(square) && chess.get(square).color === chess.turn()) {\n      setSelected(chess.get(square).type);\n      let moves = chess.moves({\n        square: square,\n        verbose: true\n      });\n\n      if (moves.length === 0) {\n        return;\n      }\n\n      let squaresToHighlight = [];\n\n      for (var i = 0; i < moves.length; i++) {\n        squaresToHighlight.push(moves[i].to);\n      }\n\n      let highlightedSquares = {};\n      console.log(squaresToHighlight);\n\n      for (var i = 0; i < squaresToHighlight.length; i++) {\n        highlightedSquares[squaresToHighlight[i]] = {\n          background: \"radial-gradient(circle, #0000ff 90%, transparent 40%)\",\n          borderRadius: \"50%\"\n        };\n      }\n\n      setSquareStyles(highlightedSquares);\n    }\n  };\n\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: position,\n      onDrop: move,\n      onSquareClick: movePiece,\n      squareStyles: squareStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        whiteSpace: 'pre'\n      },\n      children: chess.ascii()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chess.fen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"Jlo7zM43xxQxfV+wwFL+jh+W2PY=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/uayevan/Desktop/ChessApp/client/src/components/Board.js"],"names":["React","$","Chessboard","Chess","useState","useEffect","useContext","Tab","Tabs","TabList","TabPanel","useLocation","Link","axios","Board","selected","setSelected","position","setPosition","chess","setChess","squareStyles","setSquareStyles","move","theMove","console","log","from","sourceSquare","to","targetSquare","fen","ascii","movePiece","square","get","color","turn","type","moves","verbose","length","squaresToHighlight","i","push","highlightedSquares","background","borderRadius","whiteSpace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery'\nimport Chessboard from 'chessboardjsx'\nimport Chess from 'chess.js'\nimport { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Board() {\n    const [selected, setSelected] = useState('x')\n    const [position, setPosition] = useState('start')\n    const [chess, setChess] = useState(new Chess())\n    const [squareStyles, setSquareStyles] = useState({})\n\n\n    const move = (theMove) => {\n        console.log(theMove)\n        chess.move({from: theMove.sourceSquare, to: theMove.targetSquare})\n        setPosition(chess.fen())\n        console.log(chess.ascii())\n    }\n\n    const movePiece = (square) => {\n        console.log(square)\n        console.log(chess.get(square))\n        if(chess.get(square) && chess.get(square).color === chess.turn()) {\n            setSelected(chess.get(square).type)\n            let moves = chess.moves({\n                square: square,\n                verbose: true\n              });\n              if (moves.length === 0) {return}\n          \n              let squaresToHighlight = [];\n              for (var i = 0; i < moves.length; i++) {\n                squaresToHighlight.push(moves[i].to);\n              }\n              let highlightedSquares = {};\n              console.log(squaresToHighlight)\n              for(var i = 0; i < squaresToHighlight.length; i ++) {\n                highlightedSquares[squaresToHighlight[i]] = \n                {\n                    background:\n                    \"radial-gradient(circle, #0000ff 90%, transparent 40%)\",\n                    borderRadius: \"50%\"\n                }\n              }\n              setSquareStyles(highlightedSquares)\n        }\n        \n    }\n\n    useEffect(() => {\n\n    })\n    return(\n        <body>\n            <Chessboard position={position} onDrop={move} onSquareClick={movePiece} squareStyles={squareStyles}/>\n            <div style={{whiteSpace: 'pre'}}>{chess.ascii()}</div>\n            <div>{position}</div>\n            <div>{chess.fen()}</div>\n            \n        </body>\n    );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}